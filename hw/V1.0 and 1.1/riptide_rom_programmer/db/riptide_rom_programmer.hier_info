|R3_programmer
reset => rst.DATAIN
clk => clk.IN1
button[0] => button_s[0].DATAIN
button[1] => button_s[1].DATAIN
button[2] => button_s[2].DATAIN
button[3] => button_s[3].DATAIN
LED[0] << led_q[0].DB_MAX_OUTPUT_PORT_TYPE
LED[1] << led_q[1].DB_MAX_OUTPUT_PORT_TYPE
LED[2] << led_q[2].DB_MAX_OUTPUT_PORT_TYPE
LED[3] << led_q[3].DB_MAX_OUTPUT_PORT_TYPE
RXD => RXD.IN1
TXD << serial:serial_inst.tx
i2c_sda <> I2C_ri:i2c_ri_inst.i2c_sda
i2c_scl <> I2C_ri:i2c_ri_inst.i2c_scl


|R3_programmer|PLL0:PLL_inst
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|R3_programmer|PLL0:PLL_inst|altpll:altpll_component
inclk[0] => PLL0_altpll:auto_generated.inclk[0]
inclk[1] => PLL0_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|R3_programmer|PLL0:PLL_inst|altpll:altpll_component|PLL0_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|R3_programmer|program_rom:rom_inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a
q[8] <= altsyncram:altsyncram_component.q_a
q[9] <= altsyncram:altsyncram_component.q_a
q[10] <= altsyncram:altsyncram_component.q_a
q[11] <= altsyncram:altsyncram_component.q_a
q[12] <= altsyncram:altsyncram_component.q_a
q[13] <= altsyncram:altsyncram_component.q_a
q[14] <= altsyncram:altsyncram_component.q_a
q[15] <= altsyncram:altsyncram_component.q_a


|R3_programmer|program_rom:rom_inst|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_a[12] => ~NO_FANOUT~
data_a[13] => ~NO_FANOUT~
data_a[14] => ~NO_FANOUT~
data_a[15] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_uob1:auto_generated.address_a[0]
address_a[1] => altsyncram_uob1:auto_generated.address_a[1]
address_a[2] => altsyncram_uob1:auto_generated.address_a[2]
address_a[3] => altsyncram_uob1:auto_generated.address_a[3]
address_a[4] => altsyncram_uob1:auto_generated.address_a[4]
address_a[5] => altsyncram_uob1:auto_generated.address_a[5]
address_a[6] => altsyncram_uob1:auto_generated.address_a[6]
address_a[7] => altsyncram_uob1:auto_generated.address_a[7]
address_a[8] => altsyncram_uob1:auto_generated.address_a[8]
address_a[9] => altsyncram_uob1:auto_generated.address_a[9]
address_a[10] => altsyncram_uob1:auto_generated.address_a[10]
address_a[11] => altsyncram_uob1:auto_generated.address_a[11]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_uob1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_uob1:auto_generated.q_a[0]
q_a[1] <= altsyncram_uob1:auto_generated.q_a[1]
q_a[2] <= altsyncram_uob1:auto_generated.q_a[2]
q_a[3] <= altsyncram_uob1:auto_generated.q_a[3]
q_a[4] <= altsyncram_uob1:auto_generated.q_a[4]
q_a[5] <= altsyncram_uob1:auto_generated.q_a[5]
q_a[6] <= altsyncram_uob1:auto_generated.q_a[6]
q_a[7] <= altsyncram_uob1:auto_generated.q_a[7]
q_a[8] <= altsyncram_uob1:auto_generated.q_a[8]
q_a[9] <= altsyncram_uob1:auto_generated.q_a[9]
q_a[10] <= altsyncram_uob1:auto_generated.q_a[10]
q_a[11] <= altsyncram_uob1:auto_generated.q_a[11]
q_a[12] <= altsyncram_uob1:auto_generated.q_a[12]
q_a[13] <= altsyncram_uob1:auto_generated.q_a[13]
q_a[14] <= altsyncram_uob1:auto_generated.q_a[14]
q_a[15] <= altsyncram_uob1:auto_generated.q_a[15]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|R3_programmer|program_rom:rom_inst|altsyncram:altsyncram_component|altsyncram_uob1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_a[5] => ram_block1a12.PORTAADDR5
address_a[5] => ram_block1a13.PORTAADDR5
address_a[5] => ram_block1a14.PORTAADDR5
address_a[5] => ram_block1a15.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[6] => ram_block1a8.PORTAADDR6
address_a[6] => ram_block1a9.PORTAADDR6
address_a[6] => ram_block1a10.PORTAADDR6
address_a[6] => ram_block1a11.PORTAADDR6
address_a[6] => ram_block1a12.PORTAADDR6
address_a[6] => ram_block1a13.PORTAADDR6
address_a[6] => ram_block1a14.PORTAADDR6
address_a[6] => ram_block1a15.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[7] => ram_block1a8.PORTAADDR7
address_a[7] => ram_block1a9.PORTAADDR7
address_a[7] => ram_block1a10.PORTAADDR7
address_a[7] => ram_block1a11.PORTAADDR7
address_a[7] => ram_block1a12.PORTAADDR7
address_a[7] => ram_block1a13.PORTAADDR7
address_a[7] => ram_block1a14.PORTAADDR7
address_a[7] => ram_block1a15.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[8] => ram_block1a8.PORTAADDR8
address_a[8] => ram_block1a9.PORTAADDR8
address_a[8] => ram_block1a10.PORTAADDR8
address_a[8] => ram_block1a11.PORTAADDR8
address_a[8] => ram_block1a12.PORTAADDR8
address_a[8] => ram_block1a13.PORTAADDR8
address_a[8] => ram_block1a14.PORTAADDR8
address_a[8] => ram_block1a15.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[9] => ram_block1a8.PORTAADDR9
address_a[9] => ram_block1a9.PORTAADDR9
address_a[9] => ram_block1a10.PORTAADDR9
address_a[9] => ram_block1a11.PORTAADDR9
address_a[9] => ram_block1a12.PORTAADDR9
address_a[9] => ram_block1a13.PORTAADDR9
address_a[9] => ram_block1a14.PORTAADDR9
address_a[9] => ram_block1a15.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[10] => ram_block1a8.PORTAADDR10
address_a[10] => ram_block1a9.PORTAADDR10
address_a[10] => ram_block1a10.PORTAADDR10
address_a[10] => ram_block1a11.PORTAADDR10
address_a[10] => ram_block1a12.PORTAADDR10
address_a[10] => ram_block1a13.PORTAADDR10
address_a[10] => ram_block1a14.PORTAADDR10
address_a[10] => ram_block1a15.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[11] => ram_block1a8.PORTAADDR11
address_a[11] => ram_block1a9.PORTAADDR11
address_a[11] => ram_block1a10.PORTAADDR11
address_a[11] => ram_block1a11.PORTAADDR11
address_a[11] => ram_block1a12.PORTAADDR11
address_a[11] => ram_block1a13.PORTAADDR11
address_a[11] => ram_block1a14.PORTAADDR11
address_a[11] => ram_block1a15.PORTAADDR11
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT


|R3_programmer|data_ram:ram_inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
address[12] => address[12].IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
wren => wren.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|R3_programmer|data_ram:ram_inst|altsyncram:altsyncram_component
wren_a => altsyncram_a8g1:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_a8g1:auto_generated.data_a[0]
data_a[1] => altsyncram_a8g1:auto_generated.data_a[1]
data_a[2] => altsyncram_a8g1:auto_generated.data_a[2]
data_a[3] => altsyncram_a8g1:auto_generated.data_a[3]
data_a[4] => altsyncram_a8g1:auto_generated.data_a[4]
data_a[5] => altsyncram_a8g1:auto_generated.data_a[5]
data_a[6] => altsyncram_a8g1:auto_generated.data_a[6]
data_a[7] => altsyncram_a8g1:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_a8g1:auto_generated.address_a[0]
address_a[1] => altsyncram_a8g1:auto_generated.address_a[1]
address_a[2] => altsyncram_a8g1:auto_generated.address_a[2]
address_a[3] => altsyncram_a8g1:auto_generated.address_a[3]
address_a[4] => altsyncram_a8g1:auto_generated.address_a[4]
address_a[5] => altsyncram_a8g1:auto_generated.address_a[5]
address_a[6] => altsyncram_a8g1:auto_generated.address_a[6]
address_a[7] => altsyncram_a8g1:auto_generated.address_a[7]
address_a[8] => altsyncram_a8g1:auto_generated.address_a[8]
address_a[9] => altsyncram_a8g1:auto_generated.address_a[9]
address_a[10] => altsyncram_a8g1:auto_generated.address_a[10]
address_a[11] => altsyncram_a8g1:auto_generated.address_a[11]
address_a[12] => altsyncram_a8g1:auto_generated.address_a[12]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_a8g1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_a8g1:auto_generated.q_a[0]
q_a[1] <= altsyncram_a8g1:auto_generated.q_a[1]
q_a[2] <= altsyncram_a8g1:auto_generated.q_a[2]
q_a[3] <= altsyncram_a8g1:auto_generated.q_a[3]
q_a[4] <= altsyncram_a8g1:auto_generated.q_a[4]
q_a[5] <= altsyncram_a8g1:auto_generated.q_a[5]
q_a[6] <= altsyncram_a8g1:auto_generated.q_a[6]
q_a[7] <= altsyncram_a8g1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|R3_programmer|data_ram:ram_inst|altsyncram:altsyncram_component|altsyncram_a8g1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[12] => ram_block1a6.PORTAADDR12
address_a[12] => ram_block1a7.PORTAADDR12
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a7.PORTAWE


|R3_programmer|I2C_ri:i2c_ri_inst
clk => I2C_phy:i2c_phy_inst.clk
clk => master_ack.CLK
clk => data_from_master[0].CLK
clk => data_from_master[1].CLK
clk => data_from_master[2].CLK
clk => data_from_master[3].CLK
clk => data_from_master[4].CLK
clk => data_from_master[5].CLK
clk => data_from_master[6].CLK
clk => data_from_master[7].CLK
clk => to_CPU[0]~reg0.CLK
clk => to_CPU[1]~reg0.CLK
clk => to_CPU[2]~reg0.CLK
clk => to_CPU[3]~reg0.CLK
clk => to_CPU[4]~reg0.CLK
clk => to_CPU[5]~reg0.CLK
clk => to_CPU[6]~reg0.CLK
clk => to_CPU[7]~reg0.CLK
clk => ready_flag.CLK
clk => write_req.CLK
clk => read_req.CLK
clk => stop_req.CLK
clk => start_req.CLK
reset => start_req.OUTPUTSELECT
reset => stop_req.OUTPUTSELECT
reset => read_req.OUTPUTSELECT
reset => write_req.OUTPUTSELECT
reset => ready_flag.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => to_CPU.OUTPUTSELECT
reset => I2C_phy:i2c_phy_inst.rst
reset => master_ack.ENA
reset => data_from_master[0].ENA
reset => data_from_master[1].ENA
reset => data_from_master[2].ENA
reset => data_from_master[3].ENA
reset => data_from_master[4].ENA
reset => data_from_master[5].ENA
reset => data_from_master[6].ENA
reset => data_from_master[7].ENA
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => to_CPU.OUTPUTSELECT
a => always0.IN1
a => always0.IN1
a => always0.IN1
ce => always0.IN0
ce => always0.IN0
wren => always0.IN1
ren => always0.IN1
i2c_int <= I2C_phy:i2c_phy_inst.ready
to_CPU[0] <= to_CPU[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[1] <= to_CPU[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[2] <= to_CPU[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[3] <= to_CPU[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[4] <= to_CPU[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[5] <= to_CPU[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[6] <= to_CPU[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[7] <= to_CPU[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
from_CPU[0] => data_from_master.DATAB
from_CPU[0] => start_req.DATAB
from_CPU[1] => data_from_master.DATAB
from_CPU[1] => stop_req.DATAB
from_CPU[2] => data_from_master.DATAB
from_CPU[2] => read_req.DATAB
from_CPU[3] => data_from_master.DATAB
from_CPU[3] => write_req.DATAB
from_CPU[4] => data_from_master.DATAB
from_CPU[4] => master_ack.DATAB
from_CPU[5] => data_from_master.DATAB
from_CPU[6] => data_from_master.DATAB
from_CPU[7] => data_from_master.DATAB
i2c_sda <> I2C_phy:i2c_phy_inst.i2c_sda
i2c_scl <> I2C_phy:i2c_phy_inst.i2c_scl


|R3_programmer|I2C_ri:i2c_ri_inst|I2C_phy:i2c_phy_inst
clk => rx_frame[0].CLK
clk => rx_frame[1].CLK
clk => rx_frame[2].CLK
clk => rx_frame[3].CLK
clk => rx_frame[4].CLK
clk => rx_frame[5].CLK
clk => rx_frame[6].CLK
clk => rx_frame[7].CLK
clk => rx_frame[8].CLK
clk => read_req_flag.CLK
clk => write_req_flag.CLK
clk => stop_req_flag.CLK
clk => start_req_flag.CLK
clk => prev_read_req.CLK
clk => prev_write_req.CLK
clk => prev_stop_req.CLK
clk => prev_start_req.CLK
clk => rx_active.CLK
clk => tx_active.CLK
clk => clk_active.CLK
clk => tx_frame[0].CLK
clk => tx_frame[1].CLK
clk => tx_frame[2].CLK
clk => tx_frame[3].CLK
clk => tx_frame[4].CLK
clk => tx_frame[5].CLK
clk => tx_frame[6].CLK
clk => tx_frame[7].CLK
clk => tx_frame[8].CLK
clk => tx_frame[9].CLK
clk => tx_frame[10].CLK
clk => clk_i2c.CLK
clk => clk_div[0].CLK
clk => clk_div[1].CLK
clk => clk_div[2].CLK
clk => clk_div[3].CLK
clk => clk_div[4].CLK
clk => ready~reg0.CLK
rst => clk_div.OUTPUTSELECT
rst => clk_div.OUTPUTSELECT
rst => clk_div.OUTPUTSELECT
rst => clk_div.OUTPUTSELECT
rst => clk_div.OUTPUTSELECT
rst => clk_i2c.OUTPUTSELECT
rst => tx_frame.OUTPUTSELECT
rst => clk_active.OUTPUTSELECT
rst => tx_active.OUTPUTSELECT
rst => rx_active.OUTPUTSELECT
rst => prev_start_req.OUTPUTSELECT
rst => prev_stop_req.OUTPUTSELECT
rst => prev_write_req.OUTPUTSELECT
rst => prev_read_req.OUTPUTSELECT
rst => start_req_flag.OUTPUTSELECT
rst => stop_req_flag.OUTPUTSELECT
rst => write_req_flag.OUTPUTSELECT
rst => read_req_flag.OUTPUTSELECT
rst => ready.OUTPUTSELECT
rst => rx_frame[0].ENA
rst => rx_frame[1].ENA
rst => rx_frame[2].ENA
rst => rx_frame[3].ENA
rst => rx_frame[4].ENA
rst => rx_frame[5].ENA
rst => rx_frame[6].ENA
rst => rx_frame[7].ENA
rst => rx_frame[8].ENA
rst => tx_frame[0].ENA
rst => tx_frame[1].ENA
rst => tx_frame[2].ENA
rst => tx_frame[3].ENA
rst => tx_frame[4].ENA
rst => tx_frame[5].ENA
rst => tx_frame[6].ENA
rst => tx_frame[7].ENA
rst => tx_frame[8].ENA
rst => tx_frame[9].ENA
start_req => always0.IN1
start_req => prev_start_req.DATAA
stop_req => always0.IN1
stop_req => prev_stop_req.DATAA
write_req => always0.IN1
write_req => prev_write_req.DATAA
read_req => always0.IN1
read_req => prev_read_req.DATAA
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
master_ack => tx_frame.DATAB
slave_ack <= rx_frame[0].DB_MAX_OUTPUT_PORT_TYPE
data_from_master[0] => tx_frame.DATAB
data_from_master[1] => tx_frame.DATAB
data_from_master[2] => tx_frame.DATAB
data_from_master[3] => tx_frame.DATAB
data_from_master[4] => tx_frame.DATAB
data_from_master[5] => tx_frame.DATAB
data_from_master[6] => tx_frame.DATAB
data_from_master[7] => tx_frame.DATAB
data_from_slave[0] <= rx_frame[1].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[1] <= rx_frame[2].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[2] <= rx_frame[3].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[3] <= rx_frame[4].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[4] <= rx_frame[5].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[5] <= rx_frame[6].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[6] <= rx_frame[7].DB_MAX_OUTPUT_PORT_TYPE
data_from_slave[7] <= rx_frame[8].DB_MAX_OUTPUT_PORT_TYPE
i2c_sda <> i2c_sda
i2c_scl <> i2c_scl


|R3_programmer|serial:serial_inst
clk => clk.IN3
reset => reset.IN3
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => to_CPU.OUTPUTSELECT
A => always0.IN1
A => data_write.IN1
A => data_read.IN1
CE => data_write.IN0
CE => data_read.IN0
CE => always0.IN0
WREN => data_write.IN1
REN => data_read.IN1
REN => always0.IN1
rx => rx.IN1
tx <= UART:UART_inst.tx
rx_int <= rx_ready.DB_MAX_OUTPUT_PORT_TYPE
tx_int <= queue_8_8:tx_queue.empty
to_CPU[0] <= to_CPU[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[1] <= to_CPU[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[2] <= to_CPU[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[3] <= to_CPU[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[4] <= to_CPU[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[5] <= to_CPU[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[6] <= to_CPU[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_CPU[7] <= to_CPU[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
from_CPU[0] => from_CPU[0].IN1
from_CPU[1] => from_CPU[1].IN1
from_CPU[2] => from_CPU[2].IN1
from_CPU[3] => from_CPU[3].IN1
from_CPU[4] => from_CPU[4].IN1
from_CPU[5] => from_CPU[5].IN1
from_CPU[6] => from_CPU[6].IN1
from_CPU[7] => from_CPU[7].IN1


|R3_programmer|serial:serial_inst|queue_8_8:tx_queue
clk => queue_mem.we_a.CLK
clk => queue_mem.waddr_a[2].CLK
clk => queue_mem.waddr_a[1].CLK
clk => queue_mem.waddr_a[0].CLK
clk => queue_mem.data_a[7].CLK
clk => queue_mem.data_a[6].CLK
clk => queue_mem.data_a[5].CLK
clk => queue_mem.data_a[4].CLK
clk => queue_mem.data_a[3].CLK
clk => queue_mem.data_a[2].CLK
clk => queue_mem.data_a[1].CLK
clk => queue_mem.data_a[0].CLK
clk => empty~reg0.CLK
clk => full~reg0.CLK
clk => write_addr[0].CLK
clk => write_addr[1].CLK
clk => write_addr[2].CLK
clk => read_addr[0].CLK
clk => read_addr[1].CLK
clk => read_addr[2].CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => prev_pop.CLK
clk => prev_push.CLK
clk => queue_mem.CLK0
reset => read_addr.OUTPUTSELECT
reset => read_addr.OUTPUTSELECT
reset => read_addr.OUTPUTSELECT
reset => write_addr.OUTPUTSELECT
reset => write_addr.OUTPUTSELECT
reset => write_addr.OUTPUTSELECT
reset => full.OUTPUTSELECT
reset => empty.OUTPUTSELECT
reset => queue_mem.OUTPUTSELECT
push => write_addr.OUTPUTSELECT
push => write_addr.OUTPUTSELECT
push => write_addr.OUTPUTSELECT
push => prev_push.DATAIN
push => queue_mem.DATAA
pop => read_addr.OUTPUTSELECT
pop => read_addr.OUTPUTSELECT
pop => read_addr.OUTPUTSELECT
pop => prev_pop.DATAIN
full <= full~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[0] => queue_mem.data_a[0].DATAIN
din[0] => queue_mem.DATAIN
din[1] => queue_mem.data_a[1].DATAIN
din[1] => queue_mem.DATAIN1
din[2] => queue_mem.data_a[2].DATAIN
din[2] => queue_mem.DATAIN2
din[3] => queue_mem.data_a[3].DATAIN
din[3] => queue_mem.DATAIN3
din[4] => queue_mem.data_a[4].DATAIN
din[4] => queue_mem.DATAIN4
din[5] => queue_mem.data_a[5].DATAIN
din[5] => queue_mem.DATAIN5
din[6] => queue_mem.data_a[6].DATAIN
din[6] => queue_mem.DATAIN6
din[7] => queue_mem.data_a[7].DATAIN
din[7] => queue_mem.DATAIN7
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|serial:serial_inst|queue_8_8:rx_queue
clk => queue_mem.we_a.CLK
clk => queue_mem.waddr_a[2].CLK
clk => queue_mem.waddr_a[1].CLK
clk => queue_mem.waddr_a[0].CLK
clk => queue_mem.data_a[7].CLK
clk => queue_mem.data_a[6].CLK
clk => queue_mem.data_a[5].CLK
clk => queue_mem.data_a[4].CLK
clk => queue_mem.data_a[3].CLK
clk => queue_mem.data_a[2].CLK
clk => queue_mem.data_a[1].CLK
clk => queue_mem.data_a[0].CLK
clk => empty~reg0.CLK
clk => full~reg0.CLK
clk => write_addr[0].CLK
clk => write_addr[1].CLK
clk => write_addr[2].CLK
clk => read_addr[0].CLK
clk => read_addr[1].CLK
clk => read_addr[2].CLK
clk => dout[0]~reg0.CLK
clk => dout[1]~reg0.CLK
clk => dout[2]~reg0.CLK
clk => dout[3]~reg0.CLK
clk => dout[4]~reg0.CLK
clk => dout[5]~reg0.CLK
clk => dout[6]~reg0.CLK
clk => dout[7]~reg0.CLK
clk => prev_pop.CLK
clk => prev_push.CLK
clk => queue_mem.CLK0
reset => read_addr.OUTPUTSELECT
reset => read_addr.OUTPUTSELECT
reset => read_addr.OUTPUTSELECT
reset => write_addr.OUTPUTSELECT
reset => write_addr.OUTPUTSELECT
reset => write_addr.OUTPUTSELECT
reset => full.OUTPUTSELECT
reset => empty.OUTPUTSELECT
reset => queue_mem.OUTPUTSELECT
push => write_addr.OUTPUTSELECT
push => write_addr.OUTPUTSELECT
push => write_addr.OUTPUTSELECT
push => prev_push.DATAIN
push => queue_mem.DATAA
pop => read_addr.OUTPUTSELECT
pop => read_addr.OUTPUTSELECT
pop => read_addr.OUTPUTSELECT
pop => prev_pop.DATAIN
full <= full~reg0.DB_MAX_OUTPUT_PORT_TYPE
empty <= empty~reg0.DB_MAX_OUTPUT_PORT_TYPE
din[0] => queue_mem.data_a[0].DATAIN
din[0] => queue_mem.DATAIN
din[1] => queue_mem.data_a[1].DATAIN
din[1] => queue_mem.DATAIN1
din[2] => queue_mem.data_a[2].DATAIN
din[2] => queue_mem.DATAIN2
din[3] => queue_mem.data_a[3].DATAIN
din[3] => queue_mem.DATAIN3
din[4] => queue_mem.data_a[4].DATAIN
din[4] => queue_mem.DATAIN4
din[5] => queue_mem.data_a[5].DATAIN
din[5] => queue_mem.DATAIN5
din[6] => queue_mem.data_a[6].DATAIN
din[6] => queue_mem.DATAIN6
din[7] => queue_mem.data_a[7].DATAIN
din[7] => queue_mem.DATAIN7
dout[0] <= dout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= dout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= dout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= dout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= dout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= dout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= dout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= dout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|serial:serial_inst|UART:UART_inst
clk => rx_frame[0].CLK
clk => rx_frame[1].CLK
clk => rx_frame[2].CLK
clk => rx_frame[3].CLK
clk => rx_frame[4].CLK
clk => rx_frame[5].CLK
clk => rx_frame[6].CLK
clk => rx_frame[7].CLK
clk => rx_frame[8].CLK
clk => rx_frame[9].CLK
clk => tx_frame[0].CLK
clk => tx_frame[1].CLK
clk => tx_frame[2].CLK
clk => tx_frame[3].CLK
clk => tx_frame[4].CLK
clk => tx_frame[5].CLK
clk => tx_frame[6].CLK
clk => tx_frame[7].CLK
clk => tx_frame[8].CLK
clk => tx_frame[9].CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_ready~reg0.CLK
clk => tx_ready~reg0.CLK
clk => tx_timer[0].CLK
clk => tx_timer[1].CLK
clk => tx_timer[2].CLK
clk => tx_timer[3].CLK
clk => tx_timer[4].CLK
clk => tx_timer[5].CLK
clk => tx_timer[6].CLK
clk => tx_timer[7].CLK
clk => tx_timer[8].CLK
clk => tx_active.CLK
clk => rx_active.CLK
clk => rx_timer[0].CLK
clk => rx_timer[1].CLK
clk => rx_timer[2].CLK
clk => rx_timer[3].CLK
clk => rx_timer[4].CLK
clk => rx_timer[5].CLK
clk => rx_timer[6].CLK
clk => rx_timer[7].CLK
clk => rx_timer[8].CLK
clk => prev_tx_req.CLK
clk => rx_s.CLK
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_timer.OUTPUTSELECT
reset => rx_active.OUTPUTSELECT
reset => tx_active.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_timer.OUTPUTSELECT
reset => tx_ready.OUTPUTSELECT
reset => rx_ready.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => rx_data.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => tx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
reset => rx_frame.OUTPUTSELECT
tx_req => always0.IN1
tx_req => prev_tx_req.DATAIN
tx_data[0] => tx_frame.DATAB
tx_data[1] => tx_frame.DATAB
tx_data[2] => tx_frame.DATAB
tx_data[3] => tx_frame.DATAB
tx_data[4] => tx_frame.DATAB
tx_data[5] => tx_frame.DATAB
tx_data[6] => tx_frame.DATAB
tx_data[7] => tx_frame.DATAB
rx => rx_s.DATAIN
tx <= tx_frame[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_ready <= tx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_ready <= rx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|timer:timer_inst
clk => to_cpu[0]~reg0.CLK
clk => to_cpu[1]~reg0.CLK
clk => to_cpu[2]~reg0.CLK
clk => to_cpu[3]~reg0.CLK
clk => to_cpu[4]~reg0.CLK
clk => to_cpu[5]~reg0.CLK
clk => to_cpu[6]~reg0.CLK
clk => to_cpu[7]~reg0.CLK
clk => count_active.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => count_active.OUTPUTSELECT
rst => to_cpu[2]~reg0.ENA
rst => to_cpu[1]~reg0.ENA
rst => to_cpu[0]~reg0.ENA
rst => to_cpu[3]~reg0.ENA
rst => to_cpu[4]~reg0.ENA
rst => to_cpu[5]~reg0.ENA
rst => to_cpu[6]~reg0.ENA
rst => to_cpu[7]~reg0.ENA
ce => count_active.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => counter.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
wren => count_active.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
wren => counter.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
ren => to_cpu.OUTPUTSELECT
hsync => Mux3.IN5
vsync => Mux4.IN5
timer_int <= timer_int.DB_MAX_OUTPUT_PORT_TYPE
addr[0] => Mux0.IN5
addr[0] => Decoder0.IN1
addr[0] => Mux1.IN2
addr[0] => Mux2.IN2
addr[0] => Mux3.IN1
addr[0] => Mux4.IN1
addr[0] => Mux5.IN1
addr[0] => Mux6.IN1
addr[0] => Mux7.IN1
addr[0] => Mux8.IN1
addr[1] => Mux0.IN4
addr[1] => Decoder0.IN0
addr[1] => Mux1.IN1
addr[1] => Mux2.IN1
addr[1] => Mux3.IN0
addr[1] => Mux4.IN0
addr[1] => Mux5.IN0
addr[1] => Mux6.IN0
addr[1] => Mux7.IN0
addr[1] => Mux8.IN0
from_cpu[0] => counter.DATAB
from_cpu[0] => counter.DATAB
from_cpu[0] => counter.DATAB
from_cpu[1] => counter.DATAB
from_cpu[1] => counter.DATAB
from_cpu[1] => counter.DATAB
from_cpu[2] => counter.DATAB
from_cpu[2] => counter.DATAB
from_cpu[2] => counter.DATAB
from_cpu[3] => counter.DATAB
from_cpu[3] => counter.DATAB
from_cpu[3] => counter.DATAB
from_cpu[4] => counter.DATAB
from_cpu[4] => counter.DATAB
from_cpu[4] => counter.DATAB
from_cpu[5] => counter.DATAB
from_cpu[5] => counter.DATAB
from_cpu[5] => counter.DATAB
from_cpu[6] => counter.DATAB
from_cpu[6] => counter.DATAB
from_cpu[6] => counter.DATAB
from_cpu[7] => counter.DATAB
from_cpu[7] => counter.DATAB
from_cpu[7] => counter.DATAB
to_cpu[0] <= to_cpu[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[1] <= to_cpu[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[2] <= to_cpu[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[3] <= to_cpu[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[4] <= to_cpu[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[5] <= to_cpu[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[6] <= to_cpu[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[7] <= to_cpu[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|interrupt_controller:intcon_inst
clk => int_addr[0]~reg0.CLK
clk => int_addr[1]~reg0.CLK
clk => int_addr[2]~reg0.CLK
clk => int_rq~reg0.CLK
clk => to_cpu[0]~reg0.CLK
clk => to_cpu[1]~reg0.CLK
clk => to_cpu[2]~reg0.CLK
clk => to_cpu[3]~reg0.CLK
clk => to_cpu[4]~reg0.CLK
clk => to_cpu[5]~reg0.CLK
clk => to_cpu[6]~reg0.CLK
clk => to_cpu[7]~reg0.CLK
clk => prev_in[0].CLK
clk => prev_in[1].CLK
clk => prev_in[2].CLK
clk => prev_in[3].CLK
clk => prev_in[4].CLK
clk => prev_in[5].CLK
clk => prev_in[6].CLK
clk => prev_in[7].CLK
clk => control[0].CLK
clk => control[1].CLK
clk => control[2].CLK
clk => control[3].CLK
clk => control[4].CLK
clk => control[5].CLK
clk => control[6].CLK
clk => control[7].CLK
clk => status[0].CLK
clk => status[1].CLK
clk => status[2].CLK
clk => status[3].CLK
clk => status[4].CLK
clk => status[5].CLK
clk => status[6].CLK
clk => status[7].CLK
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => status.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => control.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => prev_in.OUTPUTSELECT
rst => int_addr[0]~reg0.ENA
rst => int_addr[1]~reg0.ENA
rst => int_addr[2]~reg0.ENA
rst => int_rq~reg0.ENA
rst => to_cpu[0]~reg0.ENA
rst => to_cpu[1]~reg0.ENA
rst => to_cpu[2]~reg0.ENA
rst => to_cpu[3]~reg0.ENA
rst => to_cpu[4]~reg0.ENA
rst => to_cpu[5]~reg0.ENA
rst => to_cpu[6]~reg0.ENA
rst => to_cpu[7]~reg0.ENA
ce => always0.IN0
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
ce => to_cpu.OUTPUTSELECT
wren => always0.IN1
in0 => trig.IN1
in0 => prev_in.IN1
in1 => trig.IN1
in1 => prev_in.IN1
in2 => trig.IN1
in2 => prev_in.IN1
in3 => trig.IN1
in3 => prev_in.IN1
in4 => trig.IN1
in4 => prev_in.IN1
in5 => trig.IN1
in5 => prev_in.IN1
in6 => trig.IN1
in6 => prev_in.IN1
in7 => trig.IN1
in7 => prev_in.IN1
ri_addr => always0.IN1
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => to_cpu.OUTPUTSELECT
ri_addr => always0.IN1
from_cpu[0] => control.DATAB
from_cpu[0] => status.DATAB
from_cpu[1] => control.DATAB
from_cpu[1] => status.DATAB
from_cpu[2] => control.DATAB
from_cpu[2] => status.DATAB
from_cpu[3] => control.DATAB
from_cpu[3] => status.DATAB
from_cpu[4] => control.DATAB
from_cpu[4] => status.DATAB
from_cpu[5] => control.DATAB
from_cpu[5] => status.DATAB
from_cpu[6] => control.DATAB
from_cpu[6] => status.DATAB
from_cpu[7] => control.DATAB
from_cpu[7] => status.DATAB
to_cpu[0] <= to_cpu[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[1] <= to_cpu[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[2] <= to_cpu[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[3] <= to_cpu[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[4] <= to_cpu[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[5] <= to_cpu[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[6] <= to_cpu[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
to_cpu[7] <= to_cpu[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
int_addr[0] <= int_addr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
int_addr[1] <= int_addr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
int_addr[2] <= int_addr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
int_rq <= int_rq~reg0.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst
clk => clk.IN9
n_halt => HALT.DATAIN
p_cache_miss => p_cache_miss.IN2
d_cache_miss => d_cache_miss.IN1
n_reset => RST_hold.DATAIN
n_reset => RST.IN1
int_rq => prev_int_rq.IN1
int_rq => interrupt.IN1
int_addr[0] => int_addr[0].IN1
int_addr[1] => int_addr[1].IN1
int_addr[2] => int_addr[2].IN1
I[0] => I[0].IN1
I[1] => I[1].IN1
I[2] => I[2].IN1
I[3] => I[3].IN1
I[4] => I[4].IN1
I[5] => I[5].IN1
I[6] => I[6].IN1
I[7] => I[7].IN1
I[8] => I[8].IN1
I[9] => I[9].IN1
I[10] => I[10].IN1
I[11] => I[11].IN1
I[12] => I[12].IN1
I[13] => I[13].IN1
I[14] => I[14].IN1
I[15] => I[15].IN1
A[0] <= PC:PC0.A
A[1] <= PC:PC0.A
A[2] <= PC:PC0.A
A[3] <= PC:PC0.A
A[4] <= PC:PC0.A
A[5] <= PC:PC0.A
A[6] <= PC:PC0.A
A[7] <= PC:PC0.A
A[8] <= PC:PC0.A
A[9] <= PC:PC0.A
A[10] <= PC:PC0.A
A[11] <= PC:PC0.A
A[12] <= PC:PC0.A
A[13] <= PC:PC0.A
A[14] <= PC:PC0.A
A[15] <= PC:PC0.A
address[0] <= reg_file:reg_file0.ivr
address[1] <= reg_file:reg_file0.ivr
address[2] <= reg_file:reg_file0.ivr
address[3] <= reg_file:reg_file0.ivr
address[4] <= reg_file:reg_file0.ivr
address[5] <= reg_file:reg_file0.ivr
address[6] <= reg_file:reg_file0.ivr
address[7] <= reg_file:reg_file0.ivr
address[8] <= reg_file:reg_file0.ivl
address[9] <= reg_file:reg_file0.ivl
address[10] <= reg_file:reg_file0.ivl
address[11] <= reg_file:reg_file0.ivl
address[12] <= reg_file:reg_file0.ivl
address[13] <= reg_file:reg_file0.ivl
address[14] <= reg_file:reg_file0.ivl
address[15] <= reg_file:reg_file0.ivl
data_out[0] <= shift_merge:shift_merge0.data_out
data_out[1] <= shift_merge:shift_merge0.data_out
data_out[2] <= shift_merge:shift_merge0.data_out
data_out[3] <= shift_merge:shift_merge0.data_out
data_out[4] <= shift_merge:shift_merge0.data_out
data_out[5] <= shift_merge:shift_merge0.data_out
data_out[6] <= shift_merge:shift_merge0.data_out
data_out[7] <= shift_merge:shift_merge0.data_out
data_out[8] <= shift_merge:shift_merge0.data_out
data_out[9] <= shift_merge:shift_merge0.data_out
data_out[10] <= shift_merge:shift_merge0.data_out
data_out[11] <= shift_merge:shift_merge0.data_out
data_out[12] <= shift_merge:shift_merge0.data_out
data_out[13] <= shift_merge:shift_merge0.data_out
data_out[14] <= shift_merge:shift_merge0.data_out
data_out[15] <= shift_merge:shift_merge0.data_out
data_in[0] => IV_in.DATAB
data_in[1] => IV_in.DATAB
data_in[2] => IV_in.DATAB
data_in[3] => IV_in.DATAB
data_in[4] => IV_in.DATAB
data_in[5] => IV_in.DATAB
data_in[6] => IV_in.DATAB
data_in[7] => IV_in.DATAB
data_in[8] => IV_in.DATAA
data_in[9] => IV_in.DATAA
data_in[10] => IV_in.DATAA
data_in[11] => IV_in.DATAA
data_in[12] => IV_in.DATAA
data_in[13] => IV_in.DATAA
data_in[14] => IV_in.DATAA
data_in[15] => IV_in.DATAA
IO_WC <= WC6.DB_MAX_OUTPUT_PORT_TYPE
IO_RC <= IO_RC.DB_MAX_OUTPUT_PORT_TYPE
IO_n_LB_w <= n_LB_w6.DB_MAX_OUTPUT_PORT_TYPE
IO_n_LB_r <= n_LB_r.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|reg_file:reg_file0
clk => a_reg[0].CLK
clk => a_reg[1].CLK
clk => a_reg[2].CLK
clk => a_reg[3].CLK
clk => a_reg[4].CLK
clk => a_reg[5].CLK
clk => a_reg[6].CLK
clk => a_reg[7].CLK
clk => aux[0].CLK
clk => aux[1].CLK
clk => aux[2].CLK
clk => aux[3].CLK
clk => aux[4].CLK
clk => aux[5].CLK
clk => aux[6].CLK
clk => aux[7].CLK
clk => r1[0].CLK
clk => r1[1].CLK
clk => r1[2].CLK
clk => r1[3].CLK
clk => r1[4].CLK
clk => r1[5].CLK
clk => r1[6].CLK
clk => r1[7].CLK
clk => r2[0].CLK
clk => r2[1].CLK
clk => r2[2].CLK
clk => r2[3].CLK
clk => r2[4].CLK
clk => r2[5].CLK
clk => r2[6].CLK
clk => r2[7].CLK
clk => r3[0].CLK
clk => r3[1].CLK
clk => r3[2].CLK
clk => r3[3].CLK
clk => r3[4].CLK
clk => r3[5].CLK
clk => r3[6].CLK
clk => r3[7].CLK
clk => r4[0].CLK
clk => r4[1].CLK
clk => r4[2].CLK
clk => r4[3].CLK
clk => r4[4].CLK
clk => r4[5].CLK
clk => r4[6].CLK
clk => r4[7].CLK
clk => r5[0].CLK
clk => r5[1].CLK
clk => r5[2].CLK
clk => r5[3].CLK
clk => r5[4].CLK
clk => r5[5].CLK
clk => r5[6].CLK
clk => r5[7].CLK
clk => r6[0].CLK
clk => r6[1].CLK
clk => r6[2].CLK
clk => r6[3].CLK
clk => r6[4].CLK
clk => r6[5].CLK
clk => r6[6].CLK
clk => r6[7].CLK
clk => ivl_reg[0].CLK
clk => ivl_reg[1].CLK
clk => ivl_reg[2].CLK
clk => ivl_reg[3].CLK
clk => ivl_reg[4].CLK
clk => ivl_reg[5].CLK
clk => ivl_reg[6].CLK
clk => ivl_reg[7].CLK
clk => r11[0].CLK
clk => r11[1].CLK
clk => r11[2].CLK
clk => r11[3].CLK
clk => r11[4].CLK
clk => r11[5].CLK
clk => r11[6].CLK
clk => r11[7].CLK
clk => r12[0].CLK
clk => r12[1].CLK
clk => r12[2].CLK
clk => r12[3].CLK
clk => r12[4].CLK
clk => r12[5].CLK
clk => r12[6].CLK
clk => r12[7].CLK
clk => r13[0].CLK
clk => r13[1].CLK
clk => r13[2].CLK
clk => r13[3].CLK
clk => r13[4].CLK
clk => r13[5].CLK
clk => r13[6].CLK
clk => r13[7].CLK
clk => r14[0].CLK
clk => r14[1].CLK
clk => r14[2].CLK
clk => r14[3].CLK
clk => r14[4].CLK
clk => r14[5].CLK
clk => r14[6].CLK
clk => r14[7].CLK
clk => r15[0].CLK
clk => r15[1].CLK
clk => r15[2].CLK
clk => r15[3].CLK
clk => r15[4].CLK
clk => r15[5].CLK
clk => r15[6].CLK
clk => r15[7].CLK
clk => r16[0].CLK
clk => r16[1].CLK
clk => r16[2].CLK
clk => r16[3].CLK
clk => r16[4].CLK
clk => r16[5].CLK
clk => r16[6].CLK
clk => r16[7].CLK
clk => ivr_reg[0].CLK
clk => ivr_reg[1].CLK
clk => ivr_reg[2].CLK
clk => ivr_reg[3].CLK
clk => ivr_reg[4].CLK
clk => ivr_reg[5].CLK
clk => ivr_reg[6].CLK
clk => ivr_reg[7].CLK
clk => prev_wren.CLK
clk => prev_w_data[0].CLK
clk => prev_w_data[1].CLK
clk => prev_w_data[2].CLK
clk => prev_w_data[3].CLK
clk => prev_w_data[4].CLK
clk => prev_w_data[5].CLK
clk => prev_w_data[6].CLK
clk => prev_w_data[7].CLK
clk => prev_a_address[0].CLK
clk => prev_a_address[1].CLK
clk => prev_a_address[2].CLK
clk => prev_a_address[3].CLK
clk => prev_w_address[0].CLK
clk => prev_w_address[1].CLK
clk => prev_w_address[2].CLK
clk => prev_w_address[3].CLK
data_hazard => r1[4].ENA
data_hazard => r1[3].ENA
data_hazard => r1[2].ENA
data_hazard => r1[1].ENA
data_hazard => r1[0].ENA
data_hazard => aux[7].ENA
data_hazard => aux[6].ENA
data_hazard => aux[5].ENA
data_hazard => aux[4].ENA
data_hazard => aux[3].ENA
data_hazard => aux[2].ENA
data_hazard => aux[1].ENA
data_hazard => aux[0].ENA
data_hazard => a_reg[7].ENA
data_hazard => a_reg[6].ENA
data_hazard => a_reg[5].ENA
data_hazard => a_reg[4].ENA
data_hazard => a_reg[3].ENA
data_hazard => a_reg[2].ENA
data_hazard => a_reg[1].ENA
data_hazard => a_reg[0].ENA
data_hazard => r1[5].ENA
data_hazard => r1[6].ENA
data_hazard => r1[7].ENA
data_hazard => r2[0].ENA
data_hazard => r2[1].ENA
data_hazard => r2[2].ENA
data_hazard => r2[3].ENA
data_hazard => r2[4].ENA
data_hazard => r2[5].ENA
data_hazard => r2[6].ENA
data_hazard => r2[7].ENA
data_hazard => r3[0].ENA
data_hazard => r3[1].ENA
data_hazard => r3[2].ENA
data_hazard => r3[3].ENA
data_hazard => r3[4].ENA
data_hazard => r3[5].ENA
data_hazard => r3[6].ENA
data_hazard => r3[7].ENA
data_hazard => r4[0].ENA
data_hazard => r4[1].ENA
data_hazard => r4[2].ENA
data_hazard => r4[3].ENA
data_hazard => r4[4].ENA
data_hazard => r4[5].ENA
data_hazard => r4[6].ENA
data_hazard => r4[7].ENA
data_hazard => r5[0].ENA
data_hazard => r5[1].ENA
data_hazard => r5[2].ENA
data_hazard => r5[3].ENA
data_hazard => r5[4].ENA
data_hazard => r5[5].ENA
data_hazard => r5[6].ENA
data_hazard => r5[7].ENA
data_hazard => r6[0].ENA
data_hazard => r6[1].ENA
data_hazard => r6[2].ENA
data_hazard => r6[3].ENA
data_hazard => r6[4].ENA
data_hazard => r6[5].ENA
data_hazard => r6[6].ENA
data_hazard => r6[7].ENA
data_hazard => ivl_reg[0].ENA
data_hazard => ivl_reg[1].ENA
data_hazard => ivl_reg[2].ENA
data_hazard => ivl_reg[3].ENA
data_hazard => ivl_reg[4].ENA
data_hazard => ivl_reg[5].ENA
data_hazard => ivl_reg[6].ENA
data_hazard => ivl_reg[7].ENA
data_hazard => r11[0].ENA
data_hazard => r11[1].ENA
data_hazard => r11[2].ENA
data_hazard => r11[3].ENA
data_hazard => r11[4].ENA
data_hazard => r11[5].ENA
data_hazard => r11[6].ENA
data_hazard => r11[7].ENA
data_hazard => r12[0].ENA
data_hazard => r12[1].ENA
data_hazard => r12[2].ENA
data_hazard => r12[3].ENA
data_hazard => r12[4].ENA
data_hazard => r12[5].ENA
data_hazard => r12[6].ENA
data_hazard => r12[7].ENA
data_hazard => r13[0].ENA
data_hazard => r13[1].ENA
data_hazard => r13[2].ENA
data_hazard => r13[3].ENA
data_hazard => r13[4].ENA
data_hazard => r13[5].ENA
data_hazard => r13[6].ENA
data_hazard => r13[7].ENA
data_hazard => r14[0].ENA
data_hazard => r14[1].ENA
data_hazard => r14[2].ENA
data_hazard => r14[3].ENA
data_hazard => r14[4].ENA
data_hazard => r14[5].ENA
data_hazard => r14[6].ENA
data_hazard => r14[7].ENA
data_hazard => r15[0].ENA
data_hazard => r15[1].ENA
data_hazard => r15[2].ENA
data_hazard => r15[3].ENA
data_hazard => r15[4].ENA
data_hazard => r15[5].ENA
data_hazard => r15[6].ENA
data_hazard => r15[7].ENA
data_hazard => r16[0].ENA
data_hazard => r16[1].ENA
data_hazard => r16[2].ENA
data_hazard => r16[3].ENA
data_hazard => r16[4].ENA
data_hazard => r16[5].ENA
data_hazard => r16[6].ENA
data_hazard => r16[7].ENA
data_hazard => ivr_reg[0].ENA
data_hazard => ivr_reg[1].ENA
data_hazard => ivr_reg[2].ENA
data_hazard => ivr_reg[3].ENA
data_hazard => ivr_reg[4].ENA
data_hazard => ivr_reg[5].ENA
data_hazard => ivr_reg[6].ENA
data_hazard => ivr_reg[7].ENA
data_hazard => prev_wren.ENA
data_hazard => prev_w_data[0].ENA
data_hazard => prev_w_data[1].ENA
data_hazard => prev_w_data[2].ENA
data_hazard => prev_w_data[3].ENA
data_hazard => prev_w_data[4].ENA
data_hazard => prev_w_data[5].ENA
data_hazard => prev_w_data[6].ENA
data_hazard => prev_w_data[7].ENA
data_hazard => prev_a_address[0].ENA
data_hazard => prev_a_address[1].ENA
data_hazard => prev_a_address[2].ENA
data_hazard => prev_a_address[3].ENA
data_hazard => prev_w_address[0].ENA
data_hazard => prev_w_address[1].ENA
data_hazard => prev_w_address[2].ENA
data_hazard => prev_w_address[3].ENA
wren => aux_forward.IN1
wren => a_forward0.IN1
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => ivr_reg.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r16.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r15.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r14.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r13.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r12.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => r11.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => ivl_reg.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r6.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r5.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r4.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r3.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r2.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => r1.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => aux.OUTPUTSELECT
wren => prev_wren.DATAIN
a_address[0] => Mux0.IN4
a_address[0] => Mux1.IN4
a_address[0] => Mux2.IN4
a_address[0] => Mux3.IN4
a_address[0] => Mux4.IN4
a_address[0] => Mux5.IN4
a_address[0] => Mux6.IN4
a_address[0] => Mux7.IN4
a_address[0] => prev_a_address[0].DATAIN
a_address[1] => Mux0.IN3
a_address[1] => Mux1.IN3
a_address[1] => Mux2.IN3
a_address[1] => Mux3.IN3
a_address[1] => Mux4.IN3
a_address[1] => Mux5.IN3
a_address[1] => Mux6.IN3
a_address[1] => Mux7.IN3
a_address[1] => prev_a_address[1].DATAIN
a_address[2] => Mux0.IN2
a_address[2] => Mux1.IN2
a_address[2] => Mux2.IN2
a_address[2] => Mux3.IN2
a_address[2] => Mux4.IN2
a_address[2] => Mux5.IN2
a_address[2] => Mux6.IN2
a_address[2] => Mux7.IN2
a_address[2] => prev_a_address[2].DATAIN
a_address[3] => Mux0.IN1
a_address[3] => Mux1.IN1
a_address[3] => Mux2.IN1
a_address[3] => Mux3.IN1
a_address[3] => Mux4.IN1
a_address[3] => Mux5.IN1
a_address[3] => Mux6.IN1
a_address[3] => Mux7.IN1
a_address[3] => prev_a_address[3].DATAIN
w_address[0] => Equal1.IN3
w_address[0] => Decoder0.IN3
w_address[0] => Equal0.IN3
w_address[0] => prev_w_address[0].DATAIN
w_address[1] => Equal1.IN2
w_address[1] => Decoder0.IN2
w_address[1] => Equal0.IN2
w_address[1] => prev_w_address[1].DATAIN
w_address[2] => Equal1.IN1
w_address[2] => Decoder0.IN1
w_address[2] => Equal0.IN1
w_address[2] => prev_w_address[2].DATAIN
w_address[3] => Equal1.IN0
w_address[3] => Decoder0.IN0
w_address[3] => Equal0.IN0
w_address[3] => prev_w_address[3].DATAIN
w_data[0] => ivr_reg.DATAB
w_data[0] => r16.DATAB
w_data[0] => r15.DATAB
w_data[0] => r14.DATAB
w_data[0] => r13.DATAB
w_data[0] => r12.DATAB
w_data[0] => r11.DATAB
w_data[0] => ivl_reg.DATAB
w_data[0] => r6.DATAB
w_data[0] => r5.DATAB
w_data[0] => r4.DATAB
w_data[0] => r3.DATAB
w_data[0] => r2.DATAB
w_data[0] => r1.DATAB
w_data[0] => aux.DATAB
w_data[0] => a_data.DATAB
w_data[0] => aux_data.DATAB
w_data[0] => prev_w_data[0].DATAIN
w_data[1] => ivr_reg.DATAB
w_data[1] => r16.DATAB
w_data[1] => r15.DATAB
w_data[1] => r14.DATAB
w_data[1] => r13.DATAB
w_data[1] => r12.DATAB
w_data[1] => r11.DATAB
w_data[1] => ivl_reg.DATAB
w_data[1] => r6.DATAB
w_data[1] => r5.DATAB
w_data[1] => r4.DATAB
w_data[1] => r3.DATAB
w_data[1] => r2.DATAB
w_data[1] => r1.DATAB
w_data[1] => aux.DATAB
w_data[1] => a_data.DATAB
w_data[1] => aux_data.DATAB
w_data[1] => prev_w_data[1].DATAIN
w_data[2] => ivr_reg.DATAB
w_data[2] => r16.DATAB
w_data[2] => r15.DATAB
w_data[2] => r14.DATAB
w_data[2] => r13.DATAB
w_data[2] => r12.DATAB
w_data[2] => r11.DATAB
w_data[2] => ivl_reg.DATAB
w_data[2] => r6.DATAB
w_data[2] => r5.DATAB
w_data[2] => r4.DATAB
w_data[2] => r3.DATAB
w_data[2] => r2.DATAB
w_data[2] => r1.DATAB
w_data[2] => aux.DATAB
w_data[2] => a_data.DATAB
w_data[2] => aux_data.DATAB
w_data[2] => prev_w_data[2].DATAIN
w_data[3] => ivr_reg.DATAB
w_data[3] => r16.DATAB
w_data[3] => r15.DATAB
w_data[3] => r14.DATAB
w_data[3] => r13.DATAB
w_data[3] => r12.DATAB
w_data[3] => r11.DATAB
w_data[3] => ivl_reg.DATAB
w_data[3] => r6.DATAB
w_data[3] => r5.DATAB
w_data[3] => r4.DATAB
w_data[3] => r3.DATAB
w_data[3] => r2.DATAB
w_data[3] => r1.DATAB
w_data[3] => aux.DATAB
w_data[3] => a_data.DATAB
w_data[3] => aux_data.DATAB
w_data[3] => prev_w_data[3].DATAIN
w_data[4] => ivr_reg.DATAB
w_data[4] => r16.DATAB
w_data[4] => r15.DATAB
w_data[4] => r14.DATAB
w_data[4] => r13.DATAB
w_data[4] => r12.DATAB
w_data[4] => r11.DATAB
w_data[4] => ivl_reg.DATAB
w_data[4] => r6.DATAB
w_data[4] => r5.DATAB
w_data[4] => r4.DATAB
w_data[4] => r3.DATAB
w_data[4] => r2.DATAB
w_data[4] => r1.DATAB
w_data[4] => aux.DATAB
w_data[4] => a_data.DATAB
w_data[4] => aux_data.DATAB
w_data[4] => prev_w_data[4].DATAIN
w_data[5] => ivr_reg.DATAB
w_data[5] => r16.DATAB
w_data[5] => r15.DATAB
w_data[5] => r14.DATAB
w_data[5] => r13.DATAB
w_data[5] => r12.DATAB
w_data[5] => r11.DATAB
w_data[5] => ivl_reg.DATAB
w_data[5] => r6.DATAB
w_data[5] => r5.DATAB
w_data[5] => r4.DATAB
w_data[5] => r3.DATAB
w_data[5] => r2.DATAB
w_data[5] => r1.DATAB
w_data[5] => aux.DATAB
w_data[5] => a_data.DATAB
w_data[5] => aux_data.DATAB
w_data[5] => prev_w_data[5].DATAIN
w_data[6] => ivr_reg.DATAB
w_data[6] => r16.DATAB
w_data[6] => r15.DATAB
w_data[6] => r14.DATAB
w_data[6] => r13.DATAB
w_data[6] => r12.DATAB
w_data[6] => r11.DATAB
w_data[6] => ivl_reg.DATAB
w_data[6] => r6.DATAB
w_data[6] => r5.DATAB
w_data[6] => r4.DATAB
w_data[6] => r3.DATAB
w_data[6] => r2.DATAB
w_data[6] => r1.DATAB
w_data[6] => aux.DATAB
w_data[6] => a_data.DATAB
w_data[6] => aux_data.DATAB
w_data[6] => prev_w_data[6].DATAIN
w_data[7] => ivr_reg.DATAB
w_data[7] => r16.DATAB
w_data[7] => r15.DATAB
w_data[7] => r14.DATAB
w_data[7] => r13.DATAB
w_data[7] => r12.DATAB
w_data[7] => r11.DATAB
w_data[7] => ivl_reg.DATAB
w_data[7] => r6.DATAB
w_data[7] => r5.DATAB
w_data[7] => r4.DATAB
w_data[7] => r3.DATAB
w_data[7] => r2.DATAB
w_data[7] => r1.DATAB
w_data[7] => aux.DATAB
w_data[7] => a_data.DATAB
w_data[7] => aux_data.DATAB
w_data[7] => prev_w_data[7].DATAIN
a_data[0] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[1] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[2] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[3] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[4] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[5] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[6] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
a_data[7] <= a_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[0] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[1] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[2] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[3] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[4] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[5] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[6] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
aux_data[7] <= aux_data.DB_MAX_OUTPUT_PORT_TYPE
ivr[0] <= ivr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
ivr[1] <= ivr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
ivr[2] <= ivr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
ivr[3] <= ivr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
ivr[4] <= ivr_reg[4].DB_MAX_OUTPUT_PORT_TYPE
ivr[5] <= ivr_reg[5].DB_MAX_OUTPUT_PORT_TYPE
ivr[6] <= ivr_reg[6].DB_MAX_OUTPUT_PORT_TYPE
ivr[7] <= ivr_reg[7].DB_MAX_OUTPUT_PORT_TYPE
ivl[0] <= ivl_reg[0].DB_MAX_OUTPUT_PORT_TYPE
ivl[1] <= ivl_reg[1].DB_MAX_OUTPUT_PORT_TYPE
ivl[2] <= ivl_reg[2].DB_MAX_OUTPUT_PORT_TYPE
ivl[3] <= ivl_reg[3].DB_MAX_OUTPUT_PORT_TYPE
ivl[4] <= ivl_reg[4].DB_MAX_OUTPUT_PORT_TYPE
ivl[5] <= ivl_reg[5].DB_MAX_OUTPUT_PORT_TYPE
ivl[6] <= ivl_reg[6].DB_MAX_OUTPUT_PORT_TYPE
ivl[7] <= ivl_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|right_rotate:right_rotate0
clk => rotate_reg[0].CLK
clk => rotate_reg[1].CLK
clk => rotate_reg[2].CLK
clk => rotate_reg[3].CLK
clk => rotate_reg[4].CLK
clk => rotate_reg[5].CLK
clk => rotate_reg[6].CLK
clk => rotate_reg[7].CLK
data_hazard => rotate_reg[0].ENA
data_hazard => rotate_reg[1].ENA
data_hazard => rotate_reg[2].ENA
data_hazard => rotate_reg[3].ENA
data_hazard => rotate_reg[4].ENA
data_hazard => rotate_reg[5].ENA
data_hazard => rotate_reg[6].ENA
data_hazard => rotate_reg[7].ENA
rotate_in[0] => Mux0.IN7
rotate_in[0] => Mux1.IN7
rotate_in[0] => Mux2.IN7
rotate_in[0] => Mux3.IN7
rotate_in[0] => Mux4.IN7
rotate_in[0] => Mux5.IN7
rotate_in[0] => Mux6.IN7
rotate_in[0] => Mux7.IN7
rotate_in[1] => Mux0.IN6
rotate_in[1] => Mux1.IN6
rotate_in[1] => Mux2.IN6
rotate_in[1] => Mux3.IN6
rotate_in[1] => Mux4.IN6
rotate_in[1] => Mux5.IN6
rotate_in[1] => Mux6.IN6
rotate_in[1] => Mux7.IN6
rotate_in[2] => Mux0.IN5
rotate_in[2] => Mux1.IN5
rotate_in[2] => Mux2.IN5
rotate_in[2] => Mux3.IN5
rotate_in[2] => Mux4.IN5
rotate_in[2] => Mux5.IN5
rotate_in[2] => Mux6.IN5
rotate_in[2] => Mux7.IN5
rotate_in[3] => Mux0.IN4
rotate_in[3] => Mux1.IN4
rotate_in[3] => Mux2.IN4
rotate_in[3] => Mux3.IN4
rotate_in[3] => Mux4.IN4
rotate_in[3] => Mux5.IN4
rotate_in[3] => Mux6.IN4
rotate_in[3] => Mux7.IN4
rotate_in[4] => Mux0.IN3
rotate_in[4] => Mux1.IN3
rotate_in[4] => Mux2.IN3
rotate_in[4] => Mux3.IN3
rotate_in[4] => Mux4.IN3
rotate_in[4] => Mux5.IN3
rotate_in[4] => Mux6.IN3
rotate_in[4] => Mux7.IN3
rotate_in[5] => Mux0.IN2
rotate_in[5] => Mux1.IN2
rotate_in[5] => Mux2.IN2
rotate_in[5] => Mux3.IN2
rotate_in[5] => Mux4.IN2
rotate_in[5] => Mux5.IN2
rotate_in[5] => Mux6.IN2
rotate_in[5] => Mux7.IN2
rotate_in[6] => Mux0.IN1
rotate_in[6] => Mux1.IN1
rotate_in[6] => Mux2.IN1
rotate_in[6] => Mux3.IN1
rotate_in[6] => Mux4.IN1
rotate_in[6] => Mux5.IN1
rotate_in[6] => Mux6.IN1
rotate_in[6] => Mux7.IN1
rotate_in[7] => Mux0.IN0
rotate_in[7] => Mux1.IN0
rotate_in[7] => Mux2.IN0
rotate_in[7] => Mux3.IN0
rotate_in[7] => Mux4.IN0
rotate_in[7] => Mux5.IN0
rotate_in[7] => Mux6.IN0
rotate_in[7] => Mux7.IN0
rotate_out[0] <= rotate_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[1] <= rotate_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[2] <= rotate_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[3] <= rotate_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[4] <= rotate_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[5] <= rotate_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[6] <= rotate_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[7] <= rotate_reg[7].DB_MAX_OUTPUT_PORT_TYPE
R[0] => Mux0.IN10
R[0] => Mux1.IN10
R[0] => Mux2.IN10
R[0] => Mux3.IN10
R[0] => Mux4.IN10
R[0] => Mux5.IN10
R[0] => Mux6.IN10
R[0] => Mux7.IN10
R[1] => Mux0.IN9
R[1] => Mux1.IN9
R[1] => Mux2.IN9
R[1] => Mux3.IN9
R[1] => Mux4.IN9
R[1] => Mux5.IN9
R[1] => Mux6.IN9
R[1] => Mux7.IN9
R[2] => Mux0.IN8
R[2] => Mux1.IN8
R[2] => Mux2.IN8
R[2] => Mux3.IN8
R[2] => Mux4.IN8
R[2] => Mux5.IN8
R[2] => Mux6.IN8
R[2] => Mux7.IN8


|R3_programmer|RIPTIDE_III:CPU_inst|right_rotate:right_rotate1
clk => rotate_reg[0].CLK
clk => rotate_reg[1].CLK
clk => rotate_reg[2].CLK
clk => rotate_reg[3].CLK
clk => rotate_reg[4].CLK
clk => rotate_reg[5].CLK
clk => rotate_reg[6].CLK
clk => rotate_reg[7].CLK
data_hazard => rotate_reg[0].ENA
data_hazard => rotate_reg[1].ENA
data_hazard => rotate_reg[2].ENA
data_hazard => rotate_reg[3].ENA
data_hazard => rotate_reg[4].ENA
data_hazard => rotate_reg[5].ENA
data_hazard => rotate_reg[6].ENA
data_hazard => rotate_reg[7].ENA
rotate_in[0] => Mux0.IN7
rotate_in[0] => Mux1.IN7
rotate_in[0] => Mux2.IN7
rotate_in[0] => Mux3.IN7
rotate_in[0] => Mux4.IN7
rotate_in[0] => Mux5.IN7
rotate_in[0] => Mux6.IN7
rotate_in[0] => Mux7.IN7
rotate_in[1] => Mux0.IN6
rotate_in[1] => Mux1.IN6
rotate_in[1] => Mux2.IN6
rotate_in[1] => Mux3.IN6
rotate_in[1] => Mux4.IN6
rotate_in[1] => Mux5.IN6
rotate_in[1] => Mux6.IN6
rotate_in[1] => Mux7.IN6
rotate_in[2] => Mux0.IN5
rotate_in[2] => Mux1.IN5
rotate_in[2] => Mux2.IN5
rotate_in[2] => Mux3.IN5
rotate_in[2] => Mux4.IN5
rotate_in[2] => Mux5.IN5
rotate_in[2] => Mux6.IN5
rotate_in[2] => Mux7.IN5
rotate_in[3] => Mux0.IN4
rotate_in[3] => Mux1.IN4
rotate_in[3] => Mux2.IN4
rotate_in[3] => Mux3.IN4
rotate_in[3] => Mux4.IN4
rotate_in[3] => Mux5.IN4
rotate_in[3] => Mux6.IN4
rotate_in[3] => Mux7.IN4
rotate_in[4] => Mux0.IN3
rotate_in[4] => Mux1.IN3
rotate_in[4] => Mux2.IN3
rotate_in[4] => Mux3.IN3
rotate_in[4] => Mux4.IN3
rotate_in[4] => Mux5.IN3
rotate_in[4] => Mux6.IN3
rotate_in[4] => Mux7.IN3
rotate_in[5] => Mux0.IN2
rotate_in[5] => Mux1.IN2
rotate_in[5] => Mux2.IN2
rotate_in[5] => Mux3.IN2
rotate_in[5] => Mux4.IN2
rotate_in[5] => Mux5.IN2
rotate_in[5] => Mux6.IN2
rotate_in[5] => Mux7.IN2
rotate_in[6] => Mux0.IN1
rotate_in[6] => Mux1.IN1
rotate_in[6] => Mux2.IN1
rotate_in[6] => Mux3.IN1
rotate_in[6] => Mux4.IN1
rotate_in[6] => Mux5.IN1
rotate_in[6] => Mux6.IN1
rotate_in[6] => Mux7.IN1
rotate_in[7] => Mux0.IN0
rotate_in[7] => Mux1.IN0
rotate_in[7] => Mux2.IN0
rotate_in[7] => Mux3.IN0
rotate_in[7] => Mux4.IN0
rotate_in[7] => Mux5.IN0
rotate_in[7] => Mux6.IN0
rotate_in[7] => Mux7.IN0
rotate_out[0] <= rotate_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[1] <= rotate_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[2] <= rotate_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[3] <= rotate_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[4] <= rotate_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[5] <= rotate_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[6] <= rotate_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rotate_out[7] <= rotate_reg[7].DB_MAX_OUTPUT_PORT_TYPE
R[0] => Mux0.IN10
R[0] => Mux1.IN10
R[0] => Mux2.IN10
R[0] => Mux3.IN10
R[0] => Mux4.IN10
R[0] => Mux5.IN10
R[0] => Mux6.IN10
R[0] => Mux7.IN10
R[1] => Mux0.IN9
R[1] => Mux1.IN9
R[1] => Mux2.IN9
R[1] => Mux3.IN9
R[1] => Mux4.IN9
R[1] => Mux5.IN9
R[1] => Mux6.IN9
R[1] => Mux7.IN9
R[2] => Mux0.IN8
R[2] => Mux1.IN8
R[2] => Mux2.IN8
R[2] => Mux3.IN8
R[2] => Mux4.IN8
R[2] => Mux5.IN8
R[2] => Mux6.IN8
R[2] => Mux7.IN8


|R3_programmer|RIPTIDE_III:CPU_inst|mask_unit:mask0
clk => mask_reg[0].CLK
clk => mask_reg[1].CLK
clk => mask_reg[2].CLK
clk => mask_reg[3].CLK
clk => mask_reg[4].CLK
clk => mask_reg[5].CLK
clk => mask_reg[6].CLK
clk => mask_reg[7].CLK
data_hazard => mask_reg[1].ENA
data_hazard => mask_reg[0].ENA
data_hazard => mask_reg[2].ENA
data_hazard => mask_reg[3].ENA
data_hazard => mask_reg[4].ENA
data_hazard => mask_reg[5].ENA
data_hazard => mask_reg[6].ENA
data_hazard => mask_reg[7].ENA
mask_in[0] => mask_reg[0].DATAIN
mask_in[1] => mask_reg.DATAA
mask_in[2] => mask_reg.DATAA
mask_in[3] => mask_reg.DATAA
mask_in[4] => mask_reg.DATAB
mask_in[5] => mask_reg.DATAB
mask_in[6] => mask_reg.DATAB
mask_in[7] => mask_reg.DATAB
L_select[0] => Decoder0.IN2
L_select[1] => Decoder0.IN1
L_select[2] => Decoder0.IN0
mask_out[0] <= mask_reg[0].DB_MAX_OUTPUT_PORT_TYPE
mask_out[1] <= mask_reg[1].DB_MAX_OUTPUT_PORT_TYPE
mask_out[2] <= mask_reg[2].DB_MAX_OUTPUT_PORT_TYPE
mask_out[3] <= mask_reg[3].DB_MAX_OUTPUT_PORT_TYPE
mask_out[4] <= mask_reg[4].DB_MAX_OUTPUT_PORT_TYPE
mask_out[5] <= mask_reg[5].DB_MAX_OUTPUT_PORT_TYPE
mask_out[6] <= mask_reg[6].DB_MAX_OUTPUT_PORT_TYPE
mask_out[7] <= mask_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|ALU:ALU0
clk => OVF_reg.CLK
clk => alu_reg[0].CLK
clk => alu_reg[1].CLK
clk => alu_reg[2].CLK
clk => alu_reg[3].CLK
clk => alu_reg[4].CLK
clk => alu_reg[5].CLK
clk => alu_reg[6].CLK
clk => alu_reg[7].CLK
data_hazard => always0.IN1
data_hazard => alu_reg[0].ENA
data_hazard => alu_reg[1].ENA
data_hazard => alu_reg[2].ENA
data_hazard => alu_reg[3].ENA
data_hazard => alu_reg[4].ENA
data_hazard => alu_reg[5].ENA
data_hazard => alu_reg[6].ENA
data_hazard => alu_reg[7].ENA
op[0] => Mux0.IN6
op[0] => Mux1.IN6
op[0] => Mux2.IN6
op[0] => Mux3.IN6
op[0] => Mux4.IN6
op[0] => Mux5.IN6
op[0] => Mux6.IN6
op[0] => Mux7.IN6
op[0] => Equal0.IN0
op[1] => Mux0.IN5
op[1] => Mux1.IN5
op[1] => Mux2.IN5
op[1] => Mux3.IN5
op[1] => Mux4.IN5
op[1] => Mux5.IN5
op[1] => Mux6.IN5
op[1] => Mux7.IN5
op[1] => Equal0.IN2
op[2] => Mux0.IN4
op[2] => Mux1.IN4
op[2] => Mux2.IN4
op[2] => Mux3.IN4
op[2] => Mux4.IN4
op[2] => Mux5.IN4
op[2] => Mux6.IN4
op[2] => Mux7.IN4
op[2] => Equal0.IN1
in_a[0] => Add0.IN8
in_a[0] => alu_reg.IN0
in_a[0] => alu_reg.IN0
in_a[0] => Mux7.IN7
in_a[1] => Add0.IN7
in_a[1] => alu_reg.IN0
in_a[1] => alu_reg.IN0
in_a[1] => Mux6.IN7
in_a[2] => Add0.IN6
in_a[2] => alu_reg.IN0
in_a[2] => alu_reg.IN0
in_a[2] => Mux5.IN7
in_a[3] => Add0.IN5
in_a[3] => alu_reg.IN0
in_a[3] => alu_reg.IN0
in_a[3] => Mux4.IN7
in_a[4] => Add0.IN4
in_a[4] => alu_reg.IN0
in_a[4] => alu_reg.IN0
in_a[4] => Mux3.IN7
in_a[5] => Add0.IN3
in_a[5] => alu_reg.IN0
in_a[5] => alu_reg.IN0
in_a[5] => Mux2.IN7
in_a[6] => Add0.IN2
in_a[6] => alu_reg.IN0
in_a[6] => alu_reg.IN0
in_a[6] => Mux1.IN7
in_a[7] => Add0.IN1
in_a[7] => alu_reg.IN0
in_a[7] => alu_reg.IN0
in_a[7] => Mux0.IN7
in_b[0] => Add0.IN16
in_b[0] => alu_reg.IN1
in_b[0] => alu_reg.IN1
in_b[0] => Mux7.IN8
in_b[1] => Add0.IN15
in_b[1] => alu_reg.IN1
in_b[1] => alu_reg.IN1
in_b[1] => Mux6.IN8
in_b[2] => Add0.IN14
in_b[2] => alu_reg.IN1
in_b[2] => alu_reg.IN1
in_b[2] => Mux5.IN8
in_b[3] => Add0.IN13
in_b[3] => alu_reg.IN1
in_b[3] => alu_reg.IN1
in_b[3] => Mux4.IN8
in_b[4] => Add0.IN12
in_b[4] => alu_reg.IN1
in_b[4] => alu_reg.IN1
in_b[4] => Mux3.IN8
in_b[5] => Add0.IN11
in_b[5] => alu_reg.IN1
in_b[5] => alu_reg.IN1
in_b[5] => Mux2.IN8
in_b[6] => Add0.IN10
in_b[6] => alu_reg.IN1
in_b[6] => alu_reg.IN1
in_b[6] => Mux1.IN8
in_b[7] => Add0.IN9
in_b[7] => alu_reg.IN1
in_b[7] => alu_reg.IN1
in_b[7] => Mux0.IN8
alu_out[0] <= alu_reg[0].DB_MAX_OUTPUT_PORT_TYPE
alu_out[1] <= alu_reg[1].DB_MAX_OUTPUT_PORT_TYPE
alu_out[2] <= alu_reg[2].DB_MAX_OUTPUT_PORT_TYPE
alu_out[3] <= alu_reg[3].DB_MAX_OUTPUT_PORT_TYPE
alu_out[4] <= alu_reg[4].DB_MAX_OUTPUT_PORT_TYPE
alu_out[5] <= alu_reg[5].DB_MAX_OUTPUT_PORT_TYPE
alu_out[6] <= alu_reg[6].DB_MAX_OUTPUT_PORT_TYPE
alu_out[7] <= alu_reg[7].DB_MAX_OUTPUT_PORT_TYPE
OVF_out <= OVF_reg.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|shift_merge:shift_merge0
clk => merge_in[0].CLK
clk => merge_in[1].CLK
clk => merge_in[2].CLK
clk => merge_in[3].CLK
clk => merge_in[4].CLK
clk => merge_in[5].CLK
clk => merge_in[6].CLK
clk => merge_in[7].CLK
clk => LBD_reg[0].CLK
clk => LBD_reg[1].CLK
clk => LBD_reg[2].CLK
clk => LBD_reg[3].CLK
clk => LBD_reg[4].CLK
clk => LBD_reg[5].CLK
clk => LBD_reg[6].CLK
clk => LBD_reg[7].CLK
clk => RBD_reg[0].CLK
clk => RBD_reg[1].CLK
clk => RBD_reg[2].CLK
clk => RBD_reg[3].CLK
clk => RBD_reg[4].CLK
clk => RBD_reg[5].CLK
clk => RBD_reg[6].CLK
clk => RBD_reg[7].CLK
clk => merge_mask[0].CLK
clk => merge_mask[1].CLK
clk => merge_mask[2].CLK
clk => merge_mask[3].CLK
clk => merge_mask[4].CLK
clk => merge_mask[5].CLK
clk => merge_mask[6].CLK
clk => merge_mask[7].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
data_hazard => merge_in[4].ENA
data_hazard => merge_in[3].ENA
data_hazard => merge_in[2].ENA
data_hazard => merge_in[1].ENA
data_hazard => merge_in[0].ENA
data_hazard => merge_mask[0].ENA
data_hazard => merge_in[5].ENA
data_hazard => merge_in[6].ENA
data_hazard => merge_in[7].ENA
data_hazard => LBD_reg[0].ENA
data_hazard => LBD_reg[1].ENA
data_hazard => LBD_reg[2].ENA
data_hazard => LBD_reg[3].ENA
data_hazard => LBD_reg[4].ENA
data_hazard => LBD_reg[5].ENA
data_hazard => LBD_reg[6].ENA
data_hazard => LBD_reg[7].ENA
data_hazard => RBD_reg[0].ENA
data_hazard => RBD_reg[1].ENA
data_hazard => RBD_reg[2].ENA
data_hazard => RBD_reg[3].ENA
data_hazard => RBD_reg[4].ENA
data_hazard => RBD_reg[5].ENA
data_hazard => RBD_reg[6].ENA
data_hazard => RBD_reg[7].ENA
data_hazard => merge_mask[1].ENA
data_hazard => merge_mask[2].ENA
data_hazard => merge_mask[3].ENA
data_hazard => merge_mask[4].ENA
data_hazard => merge_mask[5].ENA
data_hazard => merge_mask[6].ENA
data_hazard => merge_mask[7].ENA
data_hazard => shift_reg[0].ENA
data_hazard => shift_reg[1].ENA
data_hazard => shift_reg[2].ENA
data_hazard => shift_reg[3].ENA
data_hazard => shift_reg[4].ENA
data_hazard => shift_reg[5].ENA
data_hazard => shift_reg[6].ENA
data_hazard => shift_reg[7].ENA
shift_in[0] => shift_reg[0].DATAIN
shift_in[1] => shift_reg.DATAA
shift_in[2] => shift_reg.DATAA
shift_in[3] => shift_reg.DATAA
shift_in[4] => shift_reg.DATAB
shift_in[5] => shift_reg.DATAB
shift_in[6] => shift_reg.DATAB
shift_in[7] => shift_reg.DATAB
D0[0] => Mux0.IN10
D0[0] => Mux1.IN10
D0[0] => Mux2.IN10
D0[0] => Mux3.IN10
D0[0] => Mux4.IN10
D0[0] => Mux5.IN10
D0[0] => Mux6.IN10
D0[0] => Mux7.IN10
D0[1] => Mux0.IN9
D0[1] => Mux1.IN9
D0[1] => Mux2.IN9
D0[1] => Mux3.IN9
D0[1] => Mux4.IN9
D0[1] => Mux5.IN9
D0[1] => Mux6.IN9
D0[1] => Mux7.IN9
D0[2] => Mux0.IN8
D0[2] => Mux1.IN8
D0[2] => Mux2.IN8
D0[2] => Mux3.IN8
D0[2] => Mux4.IN8
D0[2] => Mux5.IN8
D0[2] => Mux6.IN8
D0[2] => Mux7.IN8
L_select[0] => Decoder0.IN2
L_select[1] => Decoder0.IN1
L_select[2] => Decoder0.IN0
latch_wren => always2.IN0
latch_wren => always2.IN0
latch_address_w => always2.IN1
latch_address_w => always2.IN1
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
latch_address_r => merge_in.OUTPUTSELECT
data_out[0] <= RBD_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= RBD_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= RBD_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= RBD_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= RBD_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= RBD_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= RBD_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= RBD_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= LBD_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= LBD_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= LBD_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= LBD_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= LBD_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= LBD_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= LBD_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= LBD_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|PC:PC0
clk => clk.IN1
rst => rst.IN1
NZT2 => stack_pop.IN1
NZT2 => always2.IN1
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => adder_out.IN0
XEC2 => stack_pop.IN1
XEC2 => always2.IN1
XEC2 => always2.IN0
XEC2 => prev_XEC.DATAIN
XEC2 => xec_return_addr[0].ENA
XEC2 => xec_return_addr[1].ENA
XEC2 => xec_return_addr[2].ENA
XEC2 => xec_return_addr[3].ENA
XEC2 => xec_return_addr[4].ENA
XEC2 => xec_return_addr[5].ENA
XEC2 => xec_return_addr[6].ENA
XEC2 => xec_return_addr[7].ENA
XEC2 => xec_return_addr[8].ENA
XEC2 => xec_return_addr[9].ENA
XEC2 => xec_return_addr[10].ENA
XEC2 => xec_return_addr[11].ENA
XEC2 => xec_return_addr[12].ENA
XEC2 => xec_return_addr[13].ENA
XEC2 => xec_return_addr[14].ENA
XEC2 => xec_return_addr[15].ENA
JMP => always2.IN1
JMP => always2.IN1
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
JMP => PC_reg.OUTPUTSELECT
CALL2 => comb.IN0
CALL2 => always2.IN1
CALL2 => always2.IN1
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => PC_reg.OUTPUTSELECT
CALL2 => stack_pop.IN1
RET => stack_pop.IN0
RET => always2.IN0
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => stack_in.OUTPUTSELECT
interrupt => comb.IN1
interrupt => always2.IN1
interrupt => always2.IN1
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => PC_reg.OUTPUTSELECT
interrupt => stack_pop.IN1
interrupt => always2.IN1
int_addr[0] => PC_reg.DATAB
int_addr[1] => PC_reg.DATAB
int_addr[2] => PC_reg.DATAB
hazard => always1.IN1
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_current_I.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => A_pipe0.OUTPUTSELECT
hazard => always2.IN1
hazard => prev_hazard.DATAIN
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe1.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
data_hazard => A_pipe2.OUTPUTSELECT
branch_hazard => stack_pop.IN1
branch_hazard => always2.IN1
pipeline_flush => prev_pipeline_flush.DATAIN
p_cache_miss => p_miss.DATAIN
p_cache_miss => prev_hazard.ENA
register_data[0] => adder_out.IN1
register_data[0] => WideOr0.IN0
register_data[0] => PC_reg.DATAB
register_data[1] => adder_out.IN1
register_data[1] => WideOr0.IN1
register_data[1] => PC_reg.DATAB
register_data[2] => adder_out.IN1
register_data[2] => WideOr0.IN2
register_data[2] => PC_reg.DATAB
register_data[3] => adder_out.IN1
register_data[3] => WideOr0.IN3
register_data[3] => PC_reg.DATAB
register_data[4] => adder_out.IN1
register_data[4] => WideOr0.IN4
register_data[4] => PC_reg.DATAB
register_data[5] => adder_out.IN1
register_data[5] => WideOr0.IN5
register_data[5] => PC_reg.DATAB
register_data[6] => adder_out.IN1
register_data[6] => WideOr0.IN6
register_data[6] => PC_reg.DATAB
register_data[7] => adder_out.IN1
register_data[7] => WideOr0.IN7
register_data[7] => PC_reg.DATAB
PC_I_field[0] => PC_reg.DATAB
PC_I_field[1] => PC_reg.DATAB
PC_I_field[2] => PC_reg.DATAB
PC_I_field[3] => PC_reg.DATAB
PC_I_field[4] => PC_reg.DATAB
PC_I_field[5] => PC_reg.DATAB
PC_I_field[6] => PC_reg.DATAB
PC_I_field[7] => PC_reg.DATAB
PC_I_field[8] => PC_reg.DATAB
PC_I_field[9] => PC_reg.DATAB
PC_I_field[10] => PC_reg.DATAB
PC_I_field[11] => PC_reg.DATAB
PC_I_field[12] => PC_reg.DATAB
PC_I_field2[0] => Add0.IN16
PC_I_field2[1] => Add0.IN15
PC_I_field2[2] => Add0.IN14
PC_I_field2[3] => Add0.IN13
PC_I_field2[4] => Add0.IN12
PC_I_field2[5] => Add0.IN11
PC_I_field2[6] => Add0.IN10
PC_I_field2[7] => Add0.IN9
reg_nz <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
A[0] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[1] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[2] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[3] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[4] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[5] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[6] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[7] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[8] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[9] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[10] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[11] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[12] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[13] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[14] <= A.DB_MAX_OUTPUT_PORT_TYPE
A[15] <= A.DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|PC:PC0|call_stack:cstack0
rst => address.OUTPUTSELECT
rst => address.OUTPUTSELECT
rst => address.OUTPUTSELECT
rst => address.OUTPUTSELECT
clk => stack_mem.we_a.CLK
clk => stack_mem.waddr_a[3].CLK
clk => stack_mem.waddr_a[2].CLK
clk => stack_mem.waddr_a[1].CLK
clk => stack_mem.waddr_a[0].CLK
clk => stack_mem.data_a[15].CLK
clk => stack_mem.data_a[14].CLK
clk => stack_mem.data_a[13].CLK
clk => stack_mem.data_a[12].CLK
clk => stack_mem.data_a[11].CLK
clk => stack_mem.data_a[10].CLK
clk => stack_mem.data_a[9].CLK
clk => stack_mem.data_a[8].CLK
clk => stack_mem.data_a[7].CLK
clk => stack_mem.data_a[6].CLK
clk => stack_mem.data_a[5].CLK
clk => stack_mem.data_a[4].CLK
clk => stack_mem.data_a[3].CLK
clk => stack_mem.data_a[2].CLK
clk => stack_mem.data_a[1].CLK
clk => stack_mem.data_a[0].CLK
clk => address[0].CLK
clk => address[1].CLK
clk => address[2].CLK
clk => address[3].CLK
clk => output_buf[0].CLK
clk => output_buf[1].CLK
clk => output_buf[2].CLK
clk => output_buf[3].CLK
clk => output_buf[4].CLK
clk => output_buf[5].CLK
clk => output_buf[6].CLK
clk => output_buf[7].CLK
clk => output_buf[8].CLK
clk => output_buf[9].CLK
clk => output_buf[10].CLK
clk => output_buf[11].CLK
clk => output_buf[12].CLK
clk => output_buf[13].CLK
clk => output_buf[14].CLK
clk => output_buf[15].CLK
clk => prev_push.CLK
clk => input_buf[0].CLK
clk => input_buf[1].CLK
clk => input_buf[2].CLK
clk => input_buf[3].CLK
clk => input_buf[4].CLK
clk => input_buf[5].CLK
clk => input_buf[6].CLK
clk => input_buf[7].CLK
clk => input_buf[8].CLK
clk => input_buf[9].CLK
clk => input_buf[10].CLK
clk => input_buf[11].CLK
clk => input_buf[12].CLK
clk => input_buf[13].CLK
clk => input_buf[14].CLK
clk => input_buf[15].CLK
clk => stack_mem.CLK0
push => always0.IN0
push => prev_push.DATAIN
pop => always0.IN1
pop => Add0.IN2
pop => Add0.IN3
pop => Add0.IN4
data_in[0] => input_buf[0].DATAIN
data_in[1] => input_buf[1].DATAIN
data_in[2] => input_buf[2].DATAIN
data_in[3] => input_buf[3].DATAIN
data_in[4] => input_buf[4].DATAIN
data_in[5] => input_buf[5].DATAIN
data_in[6] => input_buf[6].DATAIN
data_in[7] => input_buf[7].DATAIN
data_in[8] => input_buf[8].DATAIN
data_in[9] => input_buf[9].DATAIN
data_in[10] => input_buf[10].DATAIN
data_in[11] => input_buf[11].DATAIN
data_in[12] => input_buf[12].DATAIN
data_in[13] => input_buf[13].DATAIN
data_in[14] => input_buf[14].DATAIN
data_in[15] => input_buf[15].DATAIN
data_out[0] <= output_buf[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= output_buf[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= output_buf[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= output_buf[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= output_buf[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= output_buf[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= output_buf[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= output_buf[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= output_buf[8].DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= output_buf[9].DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= output_buf[10].DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= output_buf[11].DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= output_buf[12].DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= output_buf[13].DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= output_buf[14].DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= output_buf[15].DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|decode_unit:decode_unit0
clk => latch_address_w_reg.CLK
clk => n_LB_w_reg.CLK
clk => merge_D0_reg[0].CLK
clk => merge_D0_reg[1].CLK
clk => merge_D0_reg[2].CLK
clk => dest_waddr_reg[0].CLK
clk => dest_waddr_reg[1].CLK
clk => dest_waddr_reg[2].CLK
clk => dest_waddr_reg[3].CLK
clk => shift_L_reg[0].CLK
clk => shift_L_reg[1].CLK
clk => shift_L_reg[2].CLK
clk => alu_I_field_reg[0].CLK
clk => alu_I_field_reg[1].CLK
clk => alu_I_field_reg[2].CLK
clk => alu_I_field_reg[3].CLK
clk => alu_I_field_reg[4].CLK
clk => alu_I_field_reg[5].CLK
clk => alu_I_field_reg[6].CLK
clk => alu_I_field_reg[7].CLK
clk => alu_mux_reg.CLK
clk => mask_L_reg[0].CLK
clk => mask_L_reg[1].CLK
clk => mask_L_reg[2].CLK
clk => rotate_S0_reg[0].CLK
clk => rotate_S0_reg[1].CLK
clk => rotate_S0_reg[2].CLK
clk => src_raddr_reg[0].CLK
clk => src_raddr_reg[1].CLK
clk => src_raddr_reg[2].CLK
clk => src_raddr_reg[3].CLK
clk => n_LB_r_reg.CLK
clk => rotate_R_reg[0].CLK
clk => rotate_R_reg[1].CLK
clk => rotate_R_reg[2].CLK
clk => PC_I_field_reg[0].CLK
clk => PC_I_field_reg[1].CLK
clk => PC_I_field_reg[2].CLK
clk => PC_I_field_reg[3].CLK
clk => PC_I_field_reg[4].CLK
clk => PC_I_field_reg[5].CLK
clk => PC_I_field_reg[6].CLK
clk => PC_I_field_reg[7].CLK
clk => PC_I_field_reg[8].CLK
clk => PC_I_field_reg[9].CLK
clk => PC_I_field_reg[10].CLK
clk => PC_I_field_reg[11].CLK
clk => PC_I_field_reg[12].CLK
clk => latch_wren_reg.CLK
clk => rotate_mux_reg.CLK
clk => rotate_source_reg.CLK
clk => alu_op_reg[0].CLK
clk => alu_op_reg[1].CLK
clk => alu_op_reg[2].CLK
clk => RC_reg.CLK
clk => WC_reg.CLK
clk => SC_reg.CLK
clk => regf_wren_reg.CLK
clk => RET.CLK
clk => CALL.CLK
clk => XEC.CLK
clk => NZT.CLK
clk => JMP.CLK
clk => prev_hazard.CLK
clk => I_alternate[0].CLK
clk => I_alternate[1].CLK
clk => I_alternate[2].CLK
clk => I_alternate[3].CLK
clk => I_alternate[4].CLK
clk => I_alternate[5].CLK
clk => I_alternate[6].CLK
clk => I_alternate[7].CLK
clk => I_alternate[8].CLK
clk => I_alternate[9].CLK
clk => I_alternate[10].CLK
clk => I_alternate[11].CLK
clk => I_alternate[12].CLK
clk => I_alternate[13].CLK
clk => I_alternate[14].CLK
clk => I_alternate[15].CLK
clk => I_reg[0].CLK
clk => I_reg[1].CLK
clk => I_reg[2].CLK
clk => I_reg[3].CLK
clk => I_reg[4].CLK
clk => I_reg[5].CLK
clk => I_reg[6].CLK
clk => I_reg[7].CLK
clk => I_reg[8].CLK
clk => I_reg[9].CLK
clk => I_reg[10].CLK
clk => I_reg[11].CLK
clk => I_reg[12].CLK
clk => I_reg[13].CLK
clk => I_reg[14].CLK
clk => I_reg[15].CLK
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_reg.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => I_alternate.OUTPUTSELECT
RST => prev_hazard.OUTPUTSELECT
RST => JMP.OUTPUTSELECT
RST => NZT.OUTPUTSELECT
RST => XEC.OUTPUTSELECT
RST => CALL.OUTPUTSELECT
RST => RET.OUTPUTSELECT
RST => regf_wren_reg.OUTPUTSELECT
RST => SC_reg.OUTPUTSELECT
RST => WC_reg.OUTPUTSELECT
RST => RC_reg.OUTPUTSELECT
RST => alu_op_reg.OUTPUTSELECT
RST => alu_op_reg.OUTPUTSELECT
RST => alu_op_reg.OUTPUTSELECT
RST => rotate_source_reg.OUTPUTSELECT
RST => rotate_mux_reg.OUTPUTSELECT
RST => latch_wren_reg.OUTPUTSELECT
RST => dest_waddr_reg[2].ENA
RST => dest_waddr_reg[1].ENA
RST => dest_waddr_reg[0].ENA
RST => merge_D0_reg[2].ENA
RST => merge_D0_reg[1].ENA
RST => merge_D0_reg[0].ENA
RST => n_LB_w_reg.ENA
RST => latch_address_w_reg.ENA
RST => dest_waddr_reg[3].ENA
RST => shift_L_reg[0].ENA
RST => shift_L_reg[1].ENA
RST => shift_L_reg[2].ENA
RST => alu_I_field_reg[0].ENA
RST => alu_I_field_reg[1].ENA
RST => alu_I_field_reg[2].ENA
RST => alu_I_field_reg[3].ENA
RST => alu_I_field_reg[4].ENA
RST => alu_I_field_reg[5].ENA
RST => alu_I_field_reg[6].ENA
RST => alu_I_field_reg[7].ENA
RST => alu_mux_reg.ENA
RST => mask_L_reg[0].ENA
RST => mask_L_reg[1].ENA
RST => mask_L_reg[2].ENA
RST => rotate_S0_reg[0].ENA
RST => rotate_S0_reg[1].ENA
RST => rotate_S0_reg[2].ENA
RST => src_raddr_reg[0].ENA
RST => src_raddr_reg[1].ENA
RST => src_raddr_reg[2].ENA
RST => src_raddr_reg[3].ENA
RST => n_LB_r_reg.ENA
RST => rotate_R_reg[0].ENA
RST => rotate_R_reg[1].ENA
RST => rotate_R_reg[2].ENA
RST => PC_I_field_reg[0].ENA
RST => PC_I_field_reg[1].ENA
RST => PC_I_field_reg[2].ENA
RST => PC_I_field_reg[3].ENA
RST => PC_I_field_reg[4].ENA
RST => PC_I_field_reg[5].ENA
RST => PC_I_field_reg[6].ENA
RST => PC_I_field_reg[7].ENA
RST => PC_I_field_reg[8].ENA
RST => PC_I_field_reg[9].ENA
RST => PC_I_field_reg[10].ENA
RST => PC_I_field_reg[11].ENA
RST => PC_I_field_reg[12].ENA
hazard => always0.IN1
hazard => prev_hazard.DATAA
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => PC_I_field_reg.OUTPUTSELECT
hazard => rotate_R_reg.OUTPUTSELECT
hazard => rotate_R_reg.OUTPUTSELECT
hazard => rotate_R_reg.OUTPUTSELECT
hazard => n_LB_r_reg.OUTPUTSELECT
hazard => src_raddr_reg.OUTPUTSELECT
hazard => src_raddr_reg.OUTPUTSELECT
hazard => src_raddr_reg.OUTPUTSELECT
hazard => src_raddr_reg.OUTPUTSELECT
hazard => JMP.OUTPUTSELECT
hazard => rotate_mux_reg.OUTPUTSELECT
hazard => rotate_source_reg.OUTPUTSELECT
hazard => RC_reg.OUTPUTSELECT
hazard => rotate_S0_reg.OUTPUTSELECT
hazard => rotate_S0_reg.OUTPUTSELECT
hazard => rotate_S0_reg.OUTPUTSELECT
hazard => mask_L_reg.OUTPUTSELECT
hazard => mask_L_reg.OUTPUTSELECT
hazard => mask_L_reg.OUTPUTSELECT
hazard => alu_op_reg.OUTPUTSELECT
hazard => alu_op_reg.OUTPUTSELECT
hazard => alu_op_reg.OUTPUTSELECT
hazard => alu_mux_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => alu_I_field_reg.OUTPUTSELECT
hazard => shift_L_reg.OUTPUTSELECT
hazard => shift_L_reg.OUTPUTSELECT
hazard => shift_L_reg.OUTPUTSELECT
hazard => dest_waddr_reg.OUTPUTSELECT
hazard => dest_waddr_reg.OUTPUTSELECT
hazard => dest_waddr_reg.OUTPUTSELECT
hazard => dest_waddr_reg.OUTPUTSELECT
hazard => regf_wren_reg.OUTPUTSELECT
hazard => NZT.OUTPUTSELECT
hazard => XEC.OUTPUTSELECT
hazard => CALL.OUTPUTSELECT
hazard => RET.OUTPUTSELECT
hazard => merge_D0_reg.OUTPUTSELECT
hazard => merge_D0_reg.OUTPUTSELECT
hazard => merge_D0_reg.OUTPUTSELECT
hazard => WC_reg.OUTPUTSELECT
hazard => SC_reg.OUTPUTSELECT
hazard => n_LB_w_reg.OUTPUTSELECT
hazard => latch_wren_reg.OUTPUTSELECT
hazard => latch_address_w_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
hazard => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => I_reg.OUTPUTSELECT
p_cache_miss => prev_hazard.OUTPUTSELECT
I[0] => I_alternate.DATAB
I[0] => I_reg.DATAA
I[1] => I_alternate.DATAB
I[1] => I_reg.DATAA
I[2] => I_alternate.DATAB
I[2] => I_reg.DATAA
I[3] => I_alternate.DATAB
I[3] => I_reg.DATAA
I[4] => I_alternate.DATAB
I[4] => I_reg.DATAA
I[5] => I_alternate.DATAB
I[5] => I_reg.DATAA
I[6] => I_alternate.DATAB
I[6] => I_reg.DATAA
I[7] => I_alternate.DATAB
I[7] => I_reg.DATAA
I[8] => I_alternate.DATAB
I[8] => I_reg.DATAA
I[9] => I_alternate.DATAB
I[9] => I_reg.DATAA
I[10] => I_alternate.DATAB
I[10] => I_reg.DATAA
I[11] => I_alternate.DATAB
I[11] => I_reg.DATAA
I[12] => I_alternate.DATAB
I[12] => I_reg.DATAA
I[13] => I_alternate.DATAB
I[13] => I_reg.DATAA
I[14] => I_alternate.DATAB
I[14] => I_reg.DATAA
I[15] => I_alternate.DATAB
I[15] => I_reg.DATAA
SC <= SC_reg.DB_MAX_OUTPUT_PORT_TYPE
WC <= WC_reg.DB_MAX_OUTPUT_PORT_TYPE
RC <= RC_reg.DB_MAX_OUTPUT_PORT_TYPE
n_LB_w <= n_LB_w_reg.DB_MAX_OUTPUT_PORT_TYPE
n_LB_r <= n_LB_r_reg.DB_MAX_OUTPUT_PORT_TYPE
rotate_S0[0] <= rotate_S0_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rotate_S0[1] <= rotate_S0_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rotate_S0[2] <= rotate_S0_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rotate_R[0] <= rotate_R_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rotate_R[1] <= rotate_R_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rotate_R[2] <= rotate_R_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rotate_source <= rotate_source_reg.DB_MAX_OUTPUT_PORT_TYPE
rotate_mux <= rotate_mux_reg.DB_MAX_OUTPUT_PORT_TYPE
mask_L[0] <= mask_L_reg[0].DB_MAX_OUTPUT_PORT_TYPE
mask_L[1] <= mask_L_reg[1].DB_MAX_OUTPUT_PORT_TYPE
mask_L[2] <= mask_L_reg[2].DB_MAX_OUTPUT_PORT_TYPE
alu_op[0] <= alu_op_reg[0].DB_MAX_OUTPUT_PORT_TYPE
alu_op[1] <= alu_op_reg[1].DB_MAX_OUTPUT_PORT_TYPE
alu_op[2] <= alu_op_reg[2].DB_MAX_OUTPUT_PORT_TYPE
alu_mux <= alu_mux_reg.DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[0] <= alu_I_field_reg[0].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[1] <= alu_I_field_reg[1].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[2] <= alu_I_field_reg[2].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[3] <= alu_I_field_reg[3].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[4] <= alu_I_field_reg[4].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[5] <= alu_I_field_reg[5].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[6] <= alu_I_field_reg[6].DB_MAX_OUTPUT_PORT_TYPE
alu_I_field[7] <= alu_I_field_reg[7].DB_MAX_OUTPUT_PORT_TYPE
latch_wren <= latch_wren_reg.DB_MAX_OUTPUT_PORT_TYPE
latch_address_w <= latch_address_w_reg.DB_MAX_OUTPUT_PORT_TYPE
merge_D0[0] <= merge_D0_reg[0].DB_MAX_OUTPUT_PORT_TYPE
merge_D0[1] <= merge_D0_reg[1].DB_MAX_OUTPUT_PORT_TYPE
merge_D0[2] <= merge_D0_reg[2].DB_MAX_OUTPUT_PORT_TYPE
shift_L[0] <= shift_L_reg[0].DB_MAX_OUTPUT_PORT_TYPE
shift_L[1] <= shift_L_reg[1].DB_MAX_OUTPUT_PORT_TYPE
shift_L[2] <= shift_L_reg[2].DB_MAX_OUTPUT_PORT_TYPE
src_raddr[0] <= src_raddr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
src_raddr[1] <= src_raddr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
src_raddr[2] <= src_raddr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
src_raddr[3] <= src_raddr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
dest_waddr[0] <= dest_waddr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
dest_waddr[1] <= dest_waddr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
dest_waddr[2] <= dest_waddr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
dest_waddr[3] <= dest_waddr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
regf_wren <= regf_wren_reg.DB_MAX_OUTPUT_PORT_TYPE
PC_JMP <= JMP.DB_MAX_OUTPUT_PORT_TYPE
PC_XEC <= XEC.DB_MAX_OUTPUT_PORT_TYPE
PC_NZT <= NZT.DB_MAX_OUTPUT_PORT_TYPE
PC_CALL <= CALL.DB_MAX_OUTPUT_PORT_TYPE
PC_RET <= RET.DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[0] <= PC_I_field_reg[0].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[1] <= PC_I_field_reg[1].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[2] <= PC_I_field_reg[2].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[3] <= PC_I_field_reg[3].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[4] <= PC_I_field_reg[4].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[5] <= PC_I_field_reg[5].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[6] <= PC_I_field_reg[6].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[7] <= PC_I_field_reg[7].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[8] <= PC_I_field_reg[8].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[9] <= PC_I_field_reg[9].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[10] <= PC_I_field_reg[10].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[11] <= PC_I_field_reg[11].DB_MAX_OUTPUT_PORT_TYPE
PC_I_field[12] <= PC_I_field_reg[12].DB_MAX_OUTPUT_PORT_TYPE


|R3_programmer|RIPTIDE_III:CPU_inst|hazard_unit:hazard_unit0
clk => RST_hold.CLK
NZT1 => branch_hazard.IN0
NZT2 => decoder_flush.IN0
JMP => branch_hazard.IN0
XEC1 => branch_hazard.IN1
XEC2 => decoder_flush.IN1
RET => branch_hazard.IN1
CALL2 => decoder_flush.IN1
interrupt => decoder_flush.IN1
interrupt => pipeline_flush.IN1
ALU_NZ => decoder_flush.IN1
alu_op1[0] => Equal1.IN0
alu_op1[1] => Equal1.IN2
alu_op1[2] => Equal1.IN1
HALT => hazard.IN1
RST => decoder_RST.IN1
regf_a_read[0] => Equal2.IN3
regf_a_read[1] => Equal2.IN2
regf_a_read[2] => Equal2.IN1
regf_a_read[3] => Equal2.IN0
regf_w_reg1[0] => Equal2.IN7
regf_w_reg1[1] => Equal2.IN6
regf_w_reg1[2] => Equal2.IN5
regf_w_reg1[3] => Equal2.IN4
regf_wren_reg1 => regf_hazard1.IN0
regf_wren_reg2 => ~NO_FANOUT~
SC_reg => IO_address_hazard.IN0
SC_reg1 => IO_hazard1.IN1
SC_reg2 => IO_hazard2.IN1
SC_reg3 => IO_hazard3.IN1
SC_reg4 => IO_hazard4.IN1
SC_reg5 => IO_hazard5.IN1
WC_reg1 => IO_hazard1.IN1
WC_reg1 => IO_address_hazard.IN1
WC_reg2 => IO_hazard2.IN1
WC_reg3 => IO_hazard3.IN1
WC_reg4 => IO_hazard4.IN1
WC_reg5 => IO_hazard5.IN1
WC_reg6 => IO_hazard6.IN1
WC_reg6 => IO_hazard_write_miss.IN0
RC_reg => IO_hazard1.IN1
RC_reg => IO_hazard2.IN1
RC_reg => IO_hazard3.IN1
RC_reg => IO_hazard4.IN1
RC_reg => IO_hazard5.IN1
RC_reg => IO_hazard6.IN1
RC_reg => IO_hazard_read_miss.IN0
n_LB_w_reg1 => IO_hazard1.IN0
n_LB_w_reg2 => IO_hazard2.IN0
n_LB_w_reg3 => IO_hazard3.IN0
n_LB_w_reg4 => IO_hazard4.IN0
n_LB_w_reg5 => IO_hazard5.IN0
n_LB_w_reg6 => IO_hazard6.IN0
n_LB_r => IO_hazard1.IN1
n_LB_r => IO_hazard2.IN1
n_LB_r => IO_hazard3.IN1
n_LB_r => IO_hazard4.IN1
n_LB_r => IO_hazard5.IN1
n_LB_r => IO_hazard6.IN1
rotate_mux => OVF_hazard1.IN1
rotate_mux => regf_hazard1.IN1
rotate_source => OVF_hazard1.IN1
rotate_source => regf_hazard1.IN1
latch_wren => latch_hazard.IN1
latch_wren1 => latch_hazard.IN1
latch_address_w1 => latch_hazard.IN0
latch_address_r => latch_hazard.IN1
shift_L[0] => Equal0.IN2
shift_L[1] => Equal0.IN1
shift_L[2] => Equal0.IN0
d_cache_miss => IO_hazard_read_miss.IN1
d_cache_miss => IO_hazard_write_miss.IN1
hazard <= hazard.DB_MAX_OUTPUT_PORT_TYPE
data_hazard <= IO_hazard_write_miss.DB_MAX_OUTPUT_PORT_TYPE
branch_hazard <= branch_hazard.DB_MAX_OUTPUT_PORT_TYPE
pipeline_flush <= pipeline_flush.DB_MAX_OUTPUT_PORT_TYPE
decoder_RST <= decoder_RST.DB_MAX_OUTPUT_PORT_TYPE


